name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  backend-tests:
    name: Backend Tests
    uses: ./.github/workflows/test.yml

  frontend-tests:
    name: Frontend Tests
    uses: ./.github/workflows/frontend-ci.yml

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

      - name: Get deployment URL
        id: deployment
        run: |
          echo "url=${{ steps.vercel.outputs.preview-url }}" >> $GITHUB_OUTPUT

      - name: Comment deployment URL on commit
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `🚀 Deployed to production: ${{ steps.deployment.outputs.url }}`
            })

  smoke-tests:
    name: Run Smoke Tests on Production
    runs-on: ubuntu-latest
    needs: deploy-frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Playwright
        working-directory: frontend
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Run smoke tests
        working-directory: frontend
        env:
          PLAYWRIGHT_BASE_URL: https://hireflux.vercel.app
        run: npx playwright test --grep @smoke --project=chromium

      - name: Upload smoke test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: frontend/playwright-report/

  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: smoke-tests
    if: failure()

    steps:
      - name: Rollback deployment
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--rollback'

      - name: Notify team of rollback
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Production Deployment Rolled Back',
              body: `Deployment was automatically rolled back due to failed smoke tests.\n\nCommit: ${context.sha}\nWorkflow: ${context.workflow}\n\nPlease investigate the issues before redeploying.`,
              labels: ['bug', 'production', 'urgent']
            })

  deploy-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-frontend, smoke-tests]
    if: always()

    steps:
      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Frontend Deployment: ${{ needs.deploy-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Smoke Tests: ${{ needs.smoke-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.smoke-tests.result }}" == "success" ]; then
            echo "🎉 **Deployment Successful!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Deployment Failed - Rolled Back**" >> $GITHUB_STEP_SUMMARY
          fi
