name: Frontend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  workflow_call:

defaults:
  run:
    working-directory: frontend

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Check code formatting
        run: npm run format -- --check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./frontend/coverage/coverage-final.json
          flags: frontend-unit
          name: frontend-unit-tests

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, unit-tests]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:8000' }}

      - name: Check build size
        run: |
          echo "## Build Size Report" >> $GITHUB_STEP_SUMMARY
          du -sh .next >> $GITHUB_STEP_SUMMARY

  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run accessibility tests
        run: |
          npm install -D @axe-core/cli
          npx @axe-core/cli http://localhost:3000 --exit || echo "Accessibility check completed with warnings"

  frontend-summary:
    name: Frontend CI Summary
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, unit-tests, build-check, accessibility-check]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "## Frontend CI Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Lint & Type Check: ${{ needs.lint-and-type-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build Check: ${{ needs.build-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Accessibility: ${{ needs.accessibility-check.result }}" >> $GITHUB_STEP_SUMMARY
