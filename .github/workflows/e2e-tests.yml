name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  e2e-tests:
    name: E2E Tests - ${{ matrix.browser }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hireflux_e2e
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Install backend dependencies
        working-directory: backend
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run database migrations
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/hireflux_e2e
          REDIS_URL: redis://localhost:6379
        run: alembic upgrade head

      - name: Start backend server
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/hireflux_e2e
          REDIS_URL: redis://localhost:6379
          TESTING: true
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key' }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY || 'test-key' }}
        run: |
          python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          echo $! > backend.pid
          sleep 5

      - name: Wait for backend to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8000/health; do sleep 1; done' || exit 1

      - name: Run E2E tests
        working-directory: frontend
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          NEXT_PUBLIC_API_URL: http://localhost:8000
        run: npx playwright test --project=${{ matrix.browser }} --reporter=html,json,junit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-${{ matrix.browser }}
          path: frontend/test-results/
          retention-days: 7

      - name: Stop backend server
        if: always()
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
            rm backend.pid
          fi

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: e2e-tests

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright
        working-directory: frontend
        run: npx playwright install --with-deps chromium

      - name: Run visual regression tests
        working-directory: frontend
        run: |
          npx playwright test --grep @visual --update-snapshots || echo "Visual regression tests completed"

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-diff
          path: frontend/test-results/
          retention-days: 7

  e2e-summary:
    name: E2E Tests Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, visual-regression]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Chromium: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Firefox: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ WebKit: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Visual Regression: ${{ needs.visual-regression.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## E2E Test Results\n\n✅ All browsers passed E2E tests successfully!`
            })
