{
  "openapi": "3.1.0",
  "info": {
    "title": "HireFlux",
    "description": "\n# HireFlux API\n\nAI-Powered Job Application Copilot that streamlines job search with:\n- **Tailored Resumes**: ATS-optimized resumes with multiple versions\n- **AI Cover Letters**: Personalized cover letters in formal, concise, or conversational tones\n- **Smart Job Matching**: Embeddings-based matching with 0-100 Fit Index\n- **Application Tracking**: Comprehensive pipeline management\n- **Auto-Apply**: Consent-based automated job applications\n- **Interview Coach**: Mock interviews with AI feedback\n\n## Authentication\n\nAll endpoints (except `/auth/*` and `/health`) require Bearer token authentication:\n\n```\nAuthorization: Bearer <your_jwt_token>\n```\n\nObtain tokens via:\n- Email/Password: `POST /auth/login`\n- Google OAuth: `GET /auth/google/authorize`\n- LinkedIn OAuth: `GET /auth/linkedin/authorize`\n\n## Rate Limiting\n\n- **Per Minute**: 60 requests\n- **Per Hour**: 1000 requests\n\n## Pagination\n\nList endpoints support pagination via query parameters:\n- `page`: Page number (default: 1)\n- `limit`: Items per page (default: 20, max: 100)\n\n## Response Format\n\n### Success Response\n```json\n{\n  \"success\": true,\n  \"data\": { ... },\n  \"meta\": {\n    \"page\": 1,\n    \"limit\": 20,\n    \"total\": 100\n  }\n}\n```\n\n### Error Response\n```json\n{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"ERROR_CODE\",\n    \"message\": \"Human-readable error message\",\n    \"details\": { ... },\n    \"request_id\": \"uuid\"\n  }\n}\n```\n\n## Webhooks\n\nStripe webhooks are handled at:\n- `POST /billing/webhook` (signature verification required)\n",
    "contact": {
      "name": "HireFlux Support",
      "url": "https://hireflux.com/support",
      "email": "support@hireflux.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://hireflux.com/terms"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "description": "Register a new user account.\n\nCreates a new user with:\n- User account with hashed password\n- User profile\n- Free subscription\n- Credit wallet (0 balance)\n\nReturns user info and JWT tokens.",
        "operationId": "register_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Register Api V1 Auth Register Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Authenticate user and return JWT tokens.\n\nReturns:\n- Access token (expires in 24 hours by default)\n- Refresh token (expires in 30 days by default)",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Login Api V1 Auth Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current authenticated user information.\n\nRequires valid JWT token in Authorization header.",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Current User Info Api V1 Auth Me Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.\n\nRequires valid refresh token in Authorization header.\nReturns new access and refresh tokens.",
        "operationId": "refresh_token_api_v1_auth_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Refresh Token Api V1 Auth Refresh Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/verify-email/{user_id}": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify Email",
        "description": "Verify user email address.\n\nIn production, this would be called from an email verification link.\nFor MVP, we'll allow direct verification.",
        "operationId": "verify_email_api_v1_auth_verify_email__user_id__post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Verify Email Api V1 Auth Verify Email  User Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/oauth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Oauth Login",
        "description": "Login or register user via OAuth (Google, Facebook, Apple).\n\nThis endpoint handles both login and registration for OAuth users.\nIf the user doesn't exist, a new account is created.\nIf the user exists, they are logged in.\n\n**Supported Providers:**\n- google: Requires `access_token`\n- facebook: Requires `access_token`\n- apple: Requires both `access_token` and `id_token`\n\n**Request Body:**\n- provider: OAuth provider name (google, facebook, apple)\n- access_token: Access token from OAuth provider\n- id_token: ID token (required only for Apple Sign In)\n\n**Returns:**\n- User information\n- JWT access and refresh tokens\n\n**Example for Google:**\n```json\n{\n    \"provider\": \"google\",\n    \"access_token\": \"ya29.a0AfH6SMB...\"\n}\n```\n\n**Example for Apple:**\n```json\n{\n    \"provider\": \"apple\",\n    \"access_token\": \"...\",\n    \"id_token\": \"eyJraWQiOiJlWGF1bm...\"\n}\n```",
        "operationId": "oauth_login_api_v1_auth_oauth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthProvider"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Oauth Login Api V1 Auth Oauth Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/onboarding/profile": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Get Complete Profile",
        "description": "Get complete user profile with all onboarding data.\n\n**Returns:**\n- Basic profile information (name, phone, location)\n- Job preferences (titles, salary range, industries)\n- Skills with proficiency levels\n- Work preferences\n- Onboarding completion status\n\nUse this endpoint to display the user's complete profile.",
        "operationId": "get_complete_profile_api_v1_onboarding_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Complete Profile Api V1 Onboarding Profile Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Update Basic Profile",
        "description": "Update basic profile information (Step 1 of onboarding).\n\n**Required fields:**\n- first_name: User's first name\n- last_name: User's last name\n\n**Optional fields:**\n- phone: Contact phone number\n- location: City, state/country\n\nThis is the first step in the onboarding process and is required.",
        "operationId": "update_basic_profile_api_v1_onboarding_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Basic Profile Api V1 Onboarding Profile Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/onboarding/preferences": {
      "put": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Update Job Preferences",
        "description": "Update job preferences (Step 2 of onboarding).\n\n**Required fields:**\n- target_titles: List of desired job titles (1-10 titles)\n\n**Optional fields:**\n- salary_min: Minimum desired salary\n- salary_max: Maximum desired salary\n- industries: List of target industries\n\n**Validation:**\n- salary_max must be greater than salary_min\n- Duplicate job titles are automatically removed",
        "operationId": "update_job_preferences_api_v1_onboarding_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPreferencesUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Job Preferences Api V1 Onboarding Preferences Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/onboarding/skills": {
      "put": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Update Skills",
        "description": "Update skills (Step 3 of onboarding).\n\n**Required fields:**\n- skills: List of skills with proficiency levels (1-50 skills)\n\n**Skill object:**\n- name: Skill name (e.g., \"Python\", \"JavaScript\")\n- proficiency: One of: \"beginner\", \"intermediate\", \"advanced\", \"expert\"\n\n**Validation:**\n- Duplicate skills are not allowed (case-insensitive)\n- At least 1 skill is required",
        "operationId": "update_skills_api_v1_onboarding_skills_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillsUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Skills Api V1 Onboarding Skills Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/onboarding/work-preferences": {
      "put": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Update Work Preferences",
        "description": "Update work preferences (Step 4 of onboarding).\n\n**Fields (all optional, defaults to false):**\n- remote: Open to remote work\n- visa_friendly: Requires visa sponsorship\n- relocation: Open to relocation\n- contract: Open to contract work\n- part_time: Open to part-time work\n\nCompleting this step with all previous steps marks onboarding as complete.",
        "operationId": "update_work_preferences_api_v1_onboarding_work_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkPreferencesUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Work Preferences Api V1 Onboarding Work Preferences Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/onboarding/progress": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Get Onboarding Progress",
        "description": "Get current onboarding progress.\n\n**Returns:**\n- current_step: Current step number (1-4)\n- onboarding_complete: Whether all steps are completed\n- profile_completed: Step 1 status\n- preferences_completed: Step 2 status\n- skills_completed: Step 3 status\n- work_preferences_completed: Step 4 status\n\nUse this endpoint to determine which step the user should see next.",
        "operationId": "get_onboarding_progress_api_v1_onboarding_progress_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Onboarding Progress Api V1 Onboarding Progress Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/onboarding/skip/{step}": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Skip Onboarding Step",
        "description": "Skip an optional onboarding step.\n\n**Parameters:**\n- step: Step number to skip (2, 3, or 4)\n\n**Note:**\n- Step 1 (basic profile) cannot be skipped\n- Skipping steps means onboarding won't be marked as complete\n- Returns updated progress after skipping",
        "operationId": "skip_onboarding_step_api_v1_onboarding_skip__step__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "step",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Step"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Skip Onboarding Step Api V1 Onboarding Skip  Step  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resumes/upload": {
      "post": {
        "tags": [
          "Resumes"
        ],
        "summary": "Upload Resume",
        "description": "Upload a resume file (PDF or DOCX).\n\n**File Requirements:**\n- Format: PDF or DOCX\n- Max size: 10MB\n- Content: Should contain resume information\n\n**Process:**\n1. File is validated for size and format\n2. File is stored securely\n3. Resume is parsed to extract information\n4. Structured data is stored in database\n\n**Returns:**\n- Resume ID\n- Upload status\n- Parse status\n- File metadata",
        "operationId": "upload_resume_api_v1_resumes_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_resume_api_v1_resumes_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Upload Resume Api V1 Resumes Upload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/resumes": {
      "get": {
        "tags": [
          "Resumes"
        ],
        "summary": "List Resumes",
        "description": "List all resumes for the authenticated user.\n\n**Returns:**\n- List of resume metadata (excludes detailed parsed data)\n- Total count\n- Default resume ID if set\n\n**Sorted by:** Most recent first",
        "operationId": "list_resumes_api_v1_resumes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response List Resumes Api V1 Resumes Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/resumes/{resume_id}": {
      "get": {
        "tags": [
          "Resumes"
        ],
        "summary": "Get Resume",
        "description": "Get detailed resume information including parsed data.\n\n**Parameters:**\n- resume_id: UUID of the resume\n\n**Returns:**\n- Complete resume details\n- Parsed contact information\n- Work experience\n- Education\n- Skills\n- Certifications\n\n**Authorization:** User can only access their own resumes",
        "operationId": "get_resume_api_v1_resumes__resume_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Resume Api V1 Resumes  Resume Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resumes"
        ],
        "summary": "Delete Resume",
        "description": "Delete a resume (soft delete).\n\n**Parameters:**\n- resume_id: UUID of the resume\n\n**Note:**\n- This is a soft delete; the file is retained but marked as deleted\n- Resume will not appear in listings\n- Cannot be recovered once deleted\n\n**Authorization:** User can only delete their own resumes",
        "operationId": "delete_resume_api_v1_resumes__resume_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Resume Api V1 Resumes  Resume Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resumes/{resume_id}/set-default": {
      "post": {
        "tags": [
          "Resumes"
        ],
        "summary": "Set Default Resume",
        "description": "Set a resume as the default for job applications.\n\n**Parameters:**\n- resume_id: UUID of the resume\n\n**Behavior:**\n- Previous default resume is automatically unmarked\n- Default resume is used for quick-apply features\n- Only one resume can be default at a time\n\n**Authorization:** User can only modify their own resumes",
        "operationId": "set_default_resume_api_v1_resumes__resume_id__set_default_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Default Resume Api V1 Resumes  Resume Id  Set Default Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resumes/{resume_id}/parsed-data": {
      "put": {
        "tags": [
          "Resumes"
        ],
        "summary": "Update Parsed Data",
        "description": "Manually update parsed resume data.\n\n**Use Case:**\n- Correct parsing errors\n- Add missing information\n- Update outdated information\n\n**Parameters:**\n- resume_id: UUID of the resume\n- parsed_data: Complete parsed data structure\n\n**Note:**\n- Original file remains unchanged\n- Manual edits override parsed data\n- All fields must be provided (full replacement)\n\n**Authorization:** User can only modify their own resumes",
        "operationId": "update_parsed_data_api_v1_resumes__resume_id__parsed_data_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Update Parsed Data Api V1 Resumes  Resume Id  Parsed Data Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resumes/{resume_id}/download": {
      "get": {
        "tags": [
          "Resumes"
        ],
        "summary": "Download Resume",
        "description": "Download the original resume file.\n\n**Parameters:**\n- resume_id: UUID of the resume\n\n**Returns:**\n- Original file content\n- Appropriate content-type header\n- Content-disposition header for download\n\n**Authorization:** User can only download their own resumes\n\n**Note:** File serving implementation pending",
        "operationId": "download_resume_api_v1_resumes__resume_id__download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/resumes/default/current": {
      "get": {
        "tags": [
          "Resumes"
        ],
        "summary": "Get Default Resume",
        "description": "Get the user's current default resume.\n\n**Returns:**\n- Default resume details if set\n- Null if no default resume\n\n**Use Case:**\n- Quick-apply features\n- Resume previews\n- Default selections",
        "operationId": "get_default_resume_api_v1_resumes_default_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Default Resume Api V1 Resumes Default Current Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/resume/generate": {
      "post": {
        "tags": [
          "AI Generation"
        ],
        "summary": "Generate Optimized Resume",
        "description": "Generate AI-optimized resume from source resume\n\nArgs:\n    request: Generation request with parameters\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    AIGenerationResponse with generated content\n\nRaises:\n    404: Resume not found\n    500: Generation failed",
        "operationId": "generate_optimized_resume_api_v1_ai_resume_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIResumeGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIGenerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/resume/regenerate-section": {
      "post": {
        "tags": [
          "AI Generation"
        ],
        "summary": "Regenerate Resume Section",
        "description": "Regenerate specific resume sections\n\nArgs:\n    request: Section regeneration request\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    Updated AIGenerationResponse\n\nRaises:\n    404: Resume version not found\n    500: Regeneration failed",
        "operationId": "regenerate_resume_section_api_v1_ai_resume_regenerate_section_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SectionRegenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIGenerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/ai/resume/{resume_id}/versions": {
      "get": {
        "tags": [
          "AI Generation"
        ],
        "summary": "Get Resume Versions",
        "description": "Get all versions for a resume\n\nArgs:\n    resume_id: Resume ID\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    List of AIGenerationResponse objects",
        "operationId": "get_resume_versions_api_v1_ai_resume__resume_id__versions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AIGenerationResponse"
                  },
                  "title": "Response Get Resume Versions Api V1 Ai Resume  Resume Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/resume/compare": {
      "post": {
        "tags": [
          "AI Generation"
        ],
        "summary": "Compare Resume Versions",
        "description": "Compare two resume versions\n\nArgs:\n    version1_id: First version ID\n    version2_id: Second version ID\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    ComparisonResult with differences\n\nRaises:\n    404: One or both versions not found",
        "operationId": "compare_resume_versions_api_v1_ai_resume_compare_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "version1_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version1 Id"
            }
          },
          {
            "name": "version2_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version2 Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComparisonResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/resume/{resume_id}/suggestions": {
      "get": {
        "tags": [
          "AI Generation"
        ],
        "summary": "Get Improvement Suggestions",
        "description": "Get AI-powered improvement suggestions for resume\n\nArgs:\n    resume_id: Resume ID\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    AIImprovementSuggestionsResponse with suggestions\n\nRaises:\n    404: Resume not found\n    500: Analysis failed",
        "operationId": "get_improvement_suggestions_api_v1_ai_resume__resume_id__suggestions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIImprovementSuggestionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ai/enhance-text": {
      "post": {
        "tags": [
          "AI Generation"
        ],
        "summary": "Enhance Text",
        "description": "Enhance specific text using AI\n\nArgs:\n    request: Text enhancement request\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    Enhanced text\n\nRaises:\n    500: Enhancement failed",
        "operationId": "enhance_text_api_v1_ai_enhance_text_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIEnhancementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cover-letters/generate": {
      "post": {
        "tags": [
          "Cover Letters"
        ],
        "summary": "Generate Cover Letter",
        "description": "Generate AI-powered cover letter\n\nArgs:\n    request: Cover letter generation parameters\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    List of CoverLetterResponse (multiple if variations requested)\n\nRaises:\n    404: Resume not found\n    500: Generation failed",
        "operationId": "generate_cover_letter_api_v1_cover_letters_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverLetterGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoverLetterResponse"
                  },
                  "type": "array",
                  "title": "Response Generate Cover Letter Api V1 Cover Letters Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cover-letters/bulk-generate": {
      "post": {
        "tags": [
          "Cover Letters"
        ],
        "summary": "Bulk Generate Cover Letters",
        "description": "Generate multiple cover letters at once\n\nArgs:\n    request: Bulk generation request\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    BulkCoverLetterResponse with results and costs",
        "operationId": "bulk_generate_cover_letters_api_v1_cover_letters_bulk_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCoverLetterGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkCoverLetterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/cover-letters/": {
      "get": {
        "tags": [
          "Cover Letters"
        ],
        "summary": "List Cover Letters",
        "description": "Get user's cover letters\n\nArgs:\n    limit: Maximum number of results\n    current_user: Authenticated user\n    db: Database session\n\nReturns:\n    List of CoverLetterResponse objects",
        "operationId": "list_cover_letters_api_v1_cover_letters__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoverLetterResponse"
                  },
                  "title": "Response List Cover Letters Api V1 Cover Letters  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cover-letters/{cover_letter_id}": {
      "get": {
        "tags": [
          "Cover Letters"
        ],
        "summary": "Get Cover Letter",
        "description": "Get specific cover letter",
        "operationId": "get_cover_letter_api_v1_cover_letters__cover_letter_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "cover_letter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Cover Letter Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverLetterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/subscriptions/create": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Create Subscription",
        "description": "Create Stripe checkout session for subscription\n\n- **plan**: Subscription plan (plus, pro)\n- **billing_interval**: month or year\n- **success_url**: URL to redirect after successful payment\n- **cancel_url**: URL to redirect if user cancels",
        "operationId": "create_subscription_api_v1_billing_subscriptions_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/subscriptions/current": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Current Subscription",
        "description": "Get current user's subscription",
        "operationId": "get_current_subscription_api_v1_billing_subscriptions_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/subscriptions/cancel": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Cancel Subscription",
        "description": "Cancel subscription\n\n- **immediate**: Cancel immediately (true) or at period end (false)\n- **reason**: Cancellation reason (optional)",
        "operationId": "cancel_subscription_api_v1_billing_subscriptions_cancel_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCancelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/webhooks/stripe": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Stripe Webhook",
        "description": "Stripe webhook endpoint\n\nHandles webhook events from Stripe:\n- checkout.session.completed\n- invoice.payment_succeeded\n- invoice.payment_failed\n- customer.subscription.deleted\n- customer.subscription.updated",
        "operationId": "stripe_webhook_api_v1_billing_webhooks_stripe_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/credits": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Credits",
        "description": "Get user's credit balance\n\nReturns:\n- ai_credits: Credits for AI resume generation\n- cover_letter_credits: Credits for cover letter generation\n- auto_apply_credits: Credits for auto-apply feature\n- job_suggestion_credits: Credits for job suggestions\n- total_earned: Lifetime credits earned\n- total_spent: Lifetime credits spent",
        "operationId": "get_credits_api_v1_billing_credits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditWalletResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/billing/credits/history": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Credit History",
        "description": "Get credit transaction history\n\n- **credit_type**: Optional filter (ai, cover_letter, auto_apply, job_suggestion)\n- **limit**: Number of transactions to return (max 100)",
        "operationId": "get_credit_history_api_v1_billing_credits_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "credit_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by credit type",
              "title": "Credit Type"
            },
            "description": "Filter by credit type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of transactions to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of transactions to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditTransaction"
                  },
                  "title": "Response Get Credit History Api V1 Billing Credits History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/credits/check/{credit_type}/{amount}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Check Credits",
        "description": "Check if user has sufficient credits\n\n- **credit_type**: Type of credit (ai, cover_letter, auto_apply, job_suggestion)\n- **amount**: Required amount",
        "operationId": "check_credits_api_v1_billing_credits_check__credit_type___amount__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "credit_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Credit Type"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Amount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/matches": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Find Job Matches",
        "description": "Find job matches for user based on their resume and preferences.\nReturns jobs ranked by Fit Index (0-100).",
        "operationId": "find_job_matches_api_v1_jobs_matches_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobMatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/JobMatchResponse"
                  },
                  "type": "array",
                  "title": "Response Find Job Matches Api V1 Jobs Matches Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/jobs/top-matches": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get Top Matches",
        "description": "Get top N job matches for user.\nConvenience endpoint for dashboard display.",
        "operationId": "get_top_matches_api_v1_jobs_top_matches_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resume_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobMatchResponse"
                  },
                  "title": "Response Get Top Matches Api V1 Jobs Top Matches Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/skill-gap-analysis": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Analyze Skill Gaps",
        "description": "Analyze skill gaps between user's resume and a specific job.\nReturns detailed skill match breakdown and learning recommendations.",
        "operationId": "analyze_skill_gaps_api_v1_jobs_skill_gap_analysis_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          },
          {
            "name": "resume_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Resume Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/admin/ingest": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Ingest Jobs",
        "description": "Admin endpoint to ingest jobs from external sources.\nRequires admin privileges.",
        "operationId": "ingest_jobs_api_v1_jobs_admin_ingest_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobIngestionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIngestionResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/jobs/admin/source-health": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get Source Health",
        "description": "Admin endpoint to check health of job sources.\nReturns metrics for each configured source.",
        "operationId": "get_source_health_api_v1_jobs_admin_source_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/jobs/admin/deactivate-stale": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Deactivate Stale Jobs",
        "description": "Admin endpoint to deactivate jobs that haven't been updated recently.",
        "operationId": "deactivate_stale_jobs_api_v1_jobs_admin_deactivate_stale_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobSource"
            }
          },
          {
            "name": "days_old",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Days Old"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interview/sessions": {
      "post": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "Create Interview Session",
        "description": "Create a new interview practice session\n\n- **interview_type**: Type of interview (technical, behavioral, system-design, product, leadership)\n- **role_level**: Target role level (junior, mid, senior, staff)\n- **company_type**: Type of company (faang, tech, enterprise, fintech, healthcare)\n- **total_questions**: Number of questions to generate (1-20)",
        "operationId": "create_interview_session_api_v1_interview_sessions_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewSessionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "List Interview Sessions",
        "description": "List all interview sessions for the current user\n\n- **skip**: Number of sessions to skip (pagination)\n- **limit**: Maximum number of sessions to return",
        "operationId": "list_interview_sessions_api_v1_interview_sessions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterviewSessionResponse"
                  },
                  "title": "Response List Interview Sessions Api V1 Interview Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interview/sessions/{session_id}": {
      "get": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "Get Interview Session",
        "description": "Get a specific interview session by ID",
        "operationId": "get_interview_session_api_v1_interview_sessions__session_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interview/sessions/{session_id}/next-question": {
      "get": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "Get Next Question",
        "description": "Get the next unanswered question in the session",
        "operationId": "get_next_question_api_v1_interview_sessions__session_id__next_question_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewQuestionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interview/questions/{question_id}/answer": {
      "post": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "Submit Answer",
        "description": "Submit an answer to a question and receive AI feedback\n\n- **user_answer**: The candidate's answer to the question\n- **time_taken_seconds**: Optional time taken to answer in seconds",
        "operationId": "submit_answer_api_v1_interview_questions__question_id__answer_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Question Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerSubmit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionFeedback"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interview/sessions/{session_id}/complete": {
      "post": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "Complete Session",
        "description": "Mark a session as completed and calculate final scores",
        "operationId": "complete_session_api_v1_interview_sessions__session_id__complete_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interview/stats": {
      "get": {
        "tags": [
          "Interview Coaching"
        ],
        "summary": "Get User Stats",
        "description": "Get interview practice statistics for the current user\n\nReturns:\n- Total sessions\n- Completed sessions\n- Total questions answered\n- Average score\n- Improvement rate\n- Sessions by type\n- Recent sessions",
        "operationId": "get_user_stats_api_v1_interview_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Notifications",
        "description": "Get user's notifications\n\n- **unread_only**: Only return unread notifications\n- **category**: Filter by notification category\n- **skip**: Number of notifications to skip (pagination)\n- **limit**: Maximum number of notifications to return",
        "operationId": "get_notifications_api_v1_notifications_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "unread_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter to unread notifications only",
              "default": false,
              "title": "Unread Only"
            },
            "description": "Filter to unread notifications only"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  },
                  "title": "Response Get Notifications Api V1 Notifications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Create Notification",
        "description": "Create a new notification (typically called by system, not end users)\n\n- **type**: Notification type\n- **title**: Notification title\n- **message**: Notification message\n- **send_email**: Override user's email preference",
        "operationId": "create_notification_api_v1_notifications_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "send_email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Override email preference for this notification",
              "title": "Send Email"
            },
            "description": "Override email preference for this notification"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{notification_id}/read": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark Notification As Read",
        "description": "Mark a notification as read",
        "operationId": "mark_notification_as_read_api_v1_notifications__notification_id__read_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/read-all": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark All As Read",
        "description": "Mark all notifications as read",
        "operationId": "mark_all_as_read_api_v1_notifications_read_all_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/{notification_id}": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Delete Notification",
        "description": "Delete a notification",
        "operationId": "delete_notification_api_v1_notifications__notification_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{notification_id}/archive": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Archive Notification",
        "description": "Archive a notification",
        "operationId": "archive_notification_api_v1_notifications__notification_id__archive_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/stats": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Notification Stats",
        "description": "Get notification statistics for the current user\n\nReturns:\n- Total notifications\n- Unread count\n- Notifications by category\n- Notifications by priority\n- Recent notifications",
        "operationId": "get_notification_stats_api_v1_notifications_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/preferences": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get Notification Preferences",
        "description": "Get user's notification preferences",
        "operationId": "get_notification_preferences_api_v1_notifications_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Update Notification Preferences",
        "description": "Update user's notification preferences\n\n- **email_***: Email notification preferences for different types\n- **inapp_***: In-app notification preferences\n- **job_match_frequency**: immediate, daily, or weekly\n- **quiet_hours_start/end**: Set quiet hours (0-23)",
        "operationId": "update_notification_preferences_api_v1_notifications_preferences_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPreferenceUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auto-apply/config": {
      "get": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Get Auto Apply Config",
        "description": "Get user's auto-apply configuration",
        "operationId": "get_auto_apply_config_api_v1_auto_apply_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Create Auto Apply Config",
        "description": "Create auto-apply configuration for user",
        "operationId": "create_auto_apply_config_api_v1_auto_apply_config_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoApplyConfigCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Update Auto Apply Config",
        "description": "Update auto-apply configuration",
        "operationId": "update_auto_apply_config_api_v1_auto_apply_config_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoApplyConfigUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auto-apply/config/disable": {
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Disable Auto Apply",
        "description": "Disable auto-apply",
        "operationId": "disable_auto_apply_api_v1_auto_apply_config_disable_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auto-apply/config/pause": {
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Pause Auto Apply",
        "description": "Pause auto-apply for specified hours",
        "operationId": "pause_auto_apply_api_v1_auto_apply_config_pause_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Pause duration in hours (1-168)",
              "title": "Hours"
            },
            "description": "Pause duration in hours (1-168)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auto-apply/queue": {
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Queue Job For Auto Apply",
        "description": "Queue a job for auto-apply",
        "operationId": "queue_job_for_auto_apply_api_v1_auto_apply_queue_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoApplyJobCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Get Auto Apply Queue",
        "description": "Get user's auto-apply queue",
        "operationId": "get_auto_apply_queue_api_v1_auto_apply_queue_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AutoApplyStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auto-apply/queue/batch": {
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Batch Queue Jobs",
        "description": "Queue multiple jobs for auto-apply",
        "operationId": "batch_queue_jobs_api_v1_auto_apply_queue_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoApplyBatchCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyBatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auto-apply/queue/{job_id}": {
      "get": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Get Auto Apply Job",
        "description": "Get detailed information about an auto-apply job",
        "operationId": "get_auto_apply_job_api_v1_auto_apply_queue__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyJobDetailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Update Auto Apply Job",
        "description": "Update an auto-apply job (e.g., approve it in apply_assist mode)",
        "operationId": "update_auto_apply_job_api_v1_auto_apply_queue__job_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoApplyJobUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Cancel Auto Apply Job",
        "description": "Cancel a queued auto-apply job",
        "operationId": "cancel_auto_apply_job_api_v1_auto_apply_queue__job_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyJobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auto-apply/queue/{job_id}/refund": {
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Request Refund For Job",
        "description": "Request credit refund for failed/invalid application",
        "operationId": "request_refund_for_job_api_v1_auto_apply_queue__job_id__refund_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auto-apply/stats": {
      "get": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Get Auto Apply Stats",
        "description": "Get user's auto-apply statistics",
        "operationId": "get_auto_apply_stats_api_v1_auto_apply_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoApplyStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auto-apply/queue/{job_id}/process": {
      "post": {
        "tags": [
          "auto-apply"
        ],
        "summary": "Manually Process Job",
        "description": "Manually trigger processing of an auto-apply job (for testing)",
        "operationId": "manually_process_job_api_v1_auto_apply_queue__job_id__process_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/events": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List Webhook Events",
        "description": "List webhook events for current user",
        "operationId": "list_webhook_events_api_v1_webhooks_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookEventResponse"
                  },
                  "title": "Response List Webhook Events Api V1 Webhooks Events Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/events/{event_id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhook Event",
        "description": "Get webhook event by ID",
        "operationId": "get_webhook_event_api_v1_webhooks_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/events/{event_id}/process": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Process Webhook Event",
        "description": "Manually trigger processing of a webhook event",
        "operationId": "process_webhook_event_api_v1_webhooks_events__event_id__process_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessWebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/applications/{application_id}/status-history": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Application Status History",
        "description": "Get status history for an application",
        "operationId": "get_application_status_history_api_v1_webhooks_applications__application_id__status_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Application Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationStatusHistoryResponse"
                  },
                  "title": "Response Get Application Status History Api V1 Webhooks Applications  Application Id  Status History Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/status-statistics": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Status Statistics",
        "description": "Get application status statistics for current user",
        "operationId": "get_status_statistics_api_v1_webhooks_status_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationStatusStatistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/interviews": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Interview",
        "description": "Create interview schedule",
        "operationId": "create_interview_api_v1_webhooks_interviews_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewScheduleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewScheduleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List Interviews",
        "description": "List interviews for current user",
        "operationId": "list_interviews_api_v1_webhooks_interviews_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "upcoming_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Upcoming Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InterviewScheduleResponse"
                  },
                  "title": "Response List Interviews Api V1 Webhooks Interviews Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/interviews/{interview_id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Interview",
        "description": "Get interview schedule by ID",
        "operationId": "get_interview_api_v1_webhooks_interviews__interview_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "interview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Interview Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewScheduleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update Interview",
        "description": "Update interview schedule",
        "operationId": "update_interview_api_v1_webhooks_interviews__interview_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "interview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Interview Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InterviewScheduleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewScheduleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/interviews/{interview_id}/cancel": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Cancel Interview",
        "description": "Cancel interview",
        "operationId": "cancel_interview_api_v1_webhooks_interviews__interview_id__cancel_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "interview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Interview Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Reason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewScheduleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/interviews/{interview_id}/complete": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Complete Interview",
        "description": "Mark interview as completed",
        "operationId": "complete_interview_api_v1_webhooks_interviews__interview_id__complete_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "interview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Interview Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_complete_interview_api_v1_webhooks_interviews__interview_id__complete_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewScheduleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/interview-statistics": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Interview Statistics",
        "description": "Get interview statistics for current user",
        "operationId": "get_interview_statistics_api_v1_webhooks_interview_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterviewStatistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/subscriptions": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Subscription",
        "description": "Create webhook subscription (admin only)",
        "operationId": "create_subscription_api_v1_webhooks_subscriptions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscriptionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/webhooks/subscriptions/{subscription_id}/verify": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Verify Subscription",
        "description": "Verify webhook subscription (admin only)",
        "operationId": "verify_subscription_api_v1_webhooks_subscriptions__subscription_id__verify_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/subscriptions/{subscription_id}/deactivate": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Deactivate Subscription",
        "description": "Deactivate webhook subscription (admin only)",
        "operationId": "deactivate_subscription_api_v1_webhooks_subscriptions__subscription_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/webhooks/statistics": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhook Statistics",
        "description": "Get webhook statistics",
        "operationId": "get_webhook_statistics_api_v1_webhooks_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookStatistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Dashboard Overview",
        "description": "Get comprehensive dashboard overview\n\nReturns all key metrics, health score, recent activity, and anomalies\nfor the authenticated user.",
        "operationId": "get_dashboard_overview_api_v1_analytics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOverview"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/dashboard/detailed": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Detailed Analytics",
        "description": "Get detailed analytics with trends and comparisons\n\nIncludes pipeline stats, conversion funnel, time series data,\nand peer comparisons.",
        "operationId": "get_detailed_analytics_api_v1_analytics_dashboard_detailed_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedAnalytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/pipeline/stats": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Pipeline Stats",
        "description": "Get application pipeline statistics\n\nReturns counts and rates for each pipeline stage:\n- Total applications\n- Applications by status (saved, applied, in review, etc.)\n- Response rate, interview rate, offer rate",
        "operationId": "get_pipeline_stats_api_v1_analytics_pipeline_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationPipelineStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/pipeline/distribution": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Pipeline Distribution",
        "description": "Get distribution of applications across pipeline stages\n\nReturns percentage distribution showing where applications are\nconcentrated in the pipeline.",
        "operationId": "get_pipeline_distribution_api_v1_analytics_pipeline_distribution_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PipelineStageDistribution"
                  },
                  "title": "Response Get Pipeline Distribution Api V1 Analytics Pipeline Distribution Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/pipeline/funnel": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Conversion Funnel",
        "description": "Get conversion funnel from application to offer\n\nShows drop-off rates at each stage:\nApplied \u2192 In Review \u2192 Interview \u2192 Offer",
        "operationId": "get_conversion_funnel_api_v1_analytics_pipeline_funnel_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversionFunnel"
                  },
                  "title": "Response Get Conversion Funnel Api V1 Analytics Pipeline Funnel Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/metrics/success": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Success Metrics",
        "description": "Get comprehensive success metrics\n\nIncludes:\n- Application counts by time period\n- Response and interview rates\n- Offer and rejection rates\n- Activity metrics (active days, streaks)",
        "operationId": "get_success_metrics_api_v1_analytics_metrics_success_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/health-score": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Health Score",
        "description": "Get job search health score\n\nCalculates an overall health score (0-100) based on:\n- Activity level\n- Application quality\n- Response rates\n- Success metrics\n\nIncludes actionable recommendations for improvement.",
        "operationId": "get_health_score_api_v1_analytics_health_score_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSearchHealthScore"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/activity": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Activity Timeline",
        "description": "Get user activity timeline\n\nReturns chronological list of user actions:\n- Resume updates\n- Applications submitted\n- Interview schedules\n- Status changes\n\nSupports pagination and filtering by activity type.",
        "operationId": "get_activity_timeline_api_v1_analytics_activity_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "activity_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Activity Types"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityTimeline"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/trends/applications": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Application Trends",
        "description": "Get application trends over time\n\nReturns daily aggregates of:\n- Applications submitted\n- Responses received\n- Interviews scheduled\n- Offers received",
        "operationId": "get_application_trends_api_v1_analytics_trends_applications_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationTrend"
                  },
                  "title": "Response Get Application Trends Api V1 Analytics Trends Applications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/trends/timeseries/{metric}": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Time Series Chart",
        "description": "Get time series chart data for a specific metric\n\nSupported metrics:\n- applications: Applications submitted over time\n- responses: Responses received over time\n- interviews: Interviews scheduled over time\n\nIncludes trend direction (increasing/decreasing/stable)\nand percentage change.",
        "operationId": "get_time_series_chart_api_v1_analytics_trends_timeseries__metric__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric"
            }
          },
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSeriesChart"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/anomalies": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Detect Anomalies",
        "description": "Detect anomalies in job search activity\n\nIdentifies unusual patterns:\n- Low or no activity\n- High rejection rates\n- Lack of responses\n- Stale applications (no updates in 60+ days)\n- Interview conversion drops\n\nEach anomaly includes severity level and actionable recommendation.",
        "operationId": "detect_anomalies_api_v1_analytics_anomalies_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnomalyReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/benchmarks/peer-comparison": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Peer Comparison",
        "description": "Compare performance with platform averages\n\nShows how user metrics compare to platform benchmarks:\n- Total applications\n- Response rate\n- Interview rate\n- Offer rate\n\nIncludes percentile ranking and performance level\n(below/average/above/excellent).",
        "operationId": "get_peer_comparison_api_v1_analytics_benchmarks_peer_comparison_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeerComparison"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/quick-stats": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Quick Stats",
        "description": "Get quick stats for dashboard widgets\n\nReturns minimal data for at-a-glance metrics:\n- Applications this week\n- Interviews this week\n- Pending offers\n- New job matches",
        "operationId": "get_quick_stats_api_v1_analytics_quick_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/analytics/export": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Export Dashboard Data",
        "description": "Export complete dashboard data\n\nReturns comprehensive data package including:\n- Dashboard overview\n- Detailed analytics\n- Activity timeline\n- Anomaly report\n\nUseful for external analysis or reporting.",
        "operationId": "export_dashboard_data_api_v1_analytics_export_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TimeRange"
                }
              ],
              "default": "last_30_days",
              "title": "Time Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardExport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/admin/platform-stats": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get Platform Stats",
        "description": "Get platform-wide statistics (admin only)\n\nReturns aggregated metrics across all users.\nIn production, this would require admin role check.",
        "operationId": "get_platform_stats_api_v1_analytics_admin_platform_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Api Root",
        "description": "API root endpoint",
        "operationId": "api_root_api_v1__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIEnhancementRequest": {
        "properties": {
          "text": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 10,
            "title": "Text",
            "description": "Text to enhance"
          },
          "context": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Context for enhancement"
          },
          "tone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeTone"
              }
            ],
            "description": "Desired tone",
            "default": "formal"
          },
          "max_length": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 500.0,
                "minimum": 50.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Length",
            "description": "Maximum enhanced length"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "AIEnhancementRequest",
        "description": "Request to enhance specific text"
      },
      "AIGenerationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "source_resume_id": {
            "type": "string",
            "title": "Source Resume Id"
          },
          "version_name": {
            "type": "string",
            "title": "Version Name"
          },
          "status": {
            "$ref": "#/components/schemas/GenerationStatus"
          },
          "generated_content": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated Content"
          },
          "token_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Usage"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "source_resume_id",
          "version_name",
          "status",
          "created_at"
        ],
        "title": "AIGenerationResponse",
        "description": "Response from AI generation"
      },
      "AIImprovementSuggestionsResponse": {
        "properties": {
          "resume_id": {
            "type": "string",
            "title": "Resume Id"
          },
          "suggestions": {
            "items": {
              "$ref": "#/components/schemas/ImprovementSuggestion"
            },
            "type": "array",
            "title": "Suggestions"
          },
          "overall_score": {
            "type": "number",
            "title": "Overall Score"
          },
          "strengths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Strengths"
          },
          "weaknesses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Weaknesses"
          },
          "missing_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Missing Keywords"
          }
        },
        "type": "object",
        "required": [
          "resume_id",
          "suggestions",
          "overall_score",
          "strengths",
          "weaknesses",
          "missing_keywords"
        ],
        "title": "AIImprovementSuggestionsResponse",
        "description": "Response with improvement suggestions"
      },
      "AIResumeGenerationRequest": {
        "properties": {
          "resume_id": {
            "type": "string",
            "title": "Resume Id",
            "description": "Source resume ID"
          },
          "target_title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Title",
            "description": "Target job title"
          },
          "target_company": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Company",
            "description": "Target company name"
          },
          "tone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeTone"
              }
            ],
            "description": "Desired tone",
            "default": "formal"
          },
          "length": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeLength"
              }
            ],
            "description": "Desired length",
            "default": "one_page"
          },
          "style": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OptimizationStyle"
              }
            ],
            "description": "Optimization style",
            "default": "ats_optimized"
          },
          "include_keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 20,
            "title": "Include Keywords",
            "description": "Keywords to emphasize",
            "default": []
          },
          "strict_factual": {
            "type": "boolean",
            "title": "Strict Factual",
            "description": "Prevent AI hallucinations",
            "default": true
          },
          "version_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Name",
            "description": "Name for this version"
          }
        },
        "type": "object",
        "required": [
          "resume_id"
        ],
        "title": "AIResumeGenerationRequest",
        "description": "Request to generate AI-optimized resume"
      },
      "ActivityItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "activity_type": {
            "$ref": "#/components/schemas/ActivityType"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "activity_type",
          "title",
          "created_at"
        ],
        "title": "ActivityItem",
        "description": "Individual activity item"
      },
      "ActivityTimeline": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/ActivityItem"
            },
            "type": "array",
            "title": "Activities"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "activities",
          "total_count",
          "has_more"
        ],
        "title": "ActivityTimeline",
        "description": "Activity timeline with pagination"
      },
      "ActivityType": {
        "type": "string",
        "enum": [
          "resume_created",
          "resume_updated",
          "cover_letter_generated",
          "job_saved",
          "application_submitted",
          "application_status_changed",
          "interview_scheduled",
          "interview_completed",
          "auto_apply_configured"
        ],
        "title": "ActivityType",
        "description": "Types of user activities"
      },
      "Anomaly": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AnomalyType"
          },
          "severity": {
            "type": "string",
            "pattern": "^(low|medium|high|critical)$",
            "title": "Severity"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "recommendation": {
            "type": "string",
            "title": "Recommendation"
          },
          "detected_at": {
            "type": "string",
            "format": "date-time",
            "title": "Detected At"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "type",
          "severity",
          "title",
          "description",
          "recommendation",
          "detected_at"
        ],
        "title": "Anomaly",
        "description": "Detected anomaly"
      },
      "AnomalyReport": {
        "properties": {
          "anomalies": {
            "items": {
              "$ref": "#/components/schemas/Anomaly"
            },
            "type": "array",
            "title": "Anomalies"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "critical_count": {
            "type": "integer",
            "title": "Critical Count"
          },
          "high_count": {
            "type": "integer",
            "title": "High Count"
          }
        },
        "type": "object",
        "required": [
          "anomalies",
          "total_count",
          "critical_count",
          "high_count"
        ],
        "title": "AnomalyReport",
        "description": "Anomaly detection report"
      },
      "AnomalyType": {
        "type": "string",
        "enum": [
          "low_activity",
          "high_rejection_rate",
          "no_responses",
          "stale_applications",
          "interview_conversion_drop"
        ],
        "title": "AnomalyType",
        "description": "Types of anomalies detected"
      },
      "AnswerSubmit": {
        "properties": {
          "user_answer": {
            "type": "string",
            "maxLength": 5000,
            "minLength": 10,
            "title": "User Answer",
            "description": "User's answer to the question"
          },
          "time_taken_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Taken Seconds",
            "description": "Time taken to answer in seconds"
          }
        },
        "type": "object",
        "required": [
          "user_answer"
        ],
        "title": "AnswerSubmit",
        "description": "Schema for submitting an answer to a question",
        "example": {
          "time_taken_seconds": 180,
          "user_answer": "At my previous company, we faced a situation where our API response time increased from 200ms to 2000ms..."
        }
      },
      "ApplicationPipelineStats": {
        "properties": {
          "total_applications": {
            "type": "integer",
            "title": "Total Applications",
            "default": 0
          },
          "saved": {
            "type": "integer",
            "title": "Saved",
            "default": 0
          },
          "applied": {
            "type": "integer",
            "title": "Applied",
            "default": 0
          },
          "in_review": {
            "type": "integer",
            "title": "In Review",
            "default": 0
          },
          "phone_screen": {
            "type": "integer",
            "title": "Phone Screen",
            "default": 0
          },
          "technical_interview": {
            "type": "integer",
            "title": "Technical Interview",
            "default": 0
          },
          "onsite_interview": {
            "type": "integer",
            "title": "Onsite Interview",
            "default": 0
          },
          "final_interview": {
            "type": "integer",
            "title": "Final Interview",
            "default": 0
          },
          "offer": {
            "type": "integer",
            "title": "Offer",
            "default": 0
          },
          "rejected": {
            "type": "integer",
            "title": "Rejected",
            "default": 0
          },
          "withdrawn": {
            "type": "integer",
            "title": "Withdrawn",
            "default": 0
          },
          "response_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Response Rate",
            "default": 0.0
          },
          "interview_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Interview Rate",
            "default": 0.0
          },
          "offer_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Offer Rate",
            "default": 0.0
          }
        },
        "type": "object",
        "title": "ApplicationPipelineStats",
        "description": "Application pipeline statistics"
      },
      "ApplicationStatus": {
        "type": "string",
        "enum": [
          "submitted",
          "in_review",
          "phone_screen",
          "technical_interview",
          "onsite_interview",
          "final_interview",
          "offer",
          "rejected",
          "withdrawn",
          "hired",
          "archived"
        ],
        "title": "ApplicationStatus",
        "description": "Application status values"
      },
      "ApplicationStatusHistoryResponse": {
        "properties": {
          "application_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Id"
          },
          "new_status": {
            "$ref": "#/components/schemas/ApplicationStatus"
          },
          "old_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApplicationStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "changed_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusChangeSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "change_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Reason"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "extra_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "webhook_event_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Event Id"
          },
          "changed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Changed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "new_status",
          "id",
          "changed_at",
          "created_at"
        ],
        "title": "ApplicationStatusHistoryResponse",
        "description": "Application status history response schema"
      },
      "ApplicationStatusStatistics": {
        "properties": {
          "total_applications": {
            "type": "integer",
            "title": "Total Applications"
          },
          "status_distribution": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status Distribution"
          },
          "total_status_changes": {
            "type": "integer",
            "title": "Total Status Changes"
          },
          "recent_status_changes": {
            "items": {
              "$ref": "#/components/schemas/ApplicationStatusHistoryResponse"
            },
            "type": "array",
            "title": "Recent Status Changes",
            "default": []
          },
          "average_time_to_first_response_days": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Time To First Response Days"
          },
          "webhook_triggered_changes": {
            "type": "integer",
            "title": "Webhook Triggered Changes"
          },
          "user_triggered_changes": {
            "type": "integer",
            "title": "User Triggered Changes"
          }
        },
        "type": "object",
        "required": [
          "total_applications",
          "status_distribution",
          "total_status_changes",
          "webhook_triggered_changes",
          "user_triggered_changes"
        ],
        "title": "ApplicationStatusStatistics",
        "description": "Application status statistics"
      },
      "ApplicationTrend": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "applications_submitted": {
            "type": "integer",
            "title": "Applications Submitted"
          },
          "responses_received": {
            "type": "integer",
            "title": "Responses Received"
          },
          "interviews_scheduled": {
            "type": "integer",
            "title": "Interviews Scheduled"
          },
          "offers_received": {
            "type": "integer",
            "title": "Offers Received"
          }
        },
        "type": "object",
        "required": [
          "date",
          "applications_submitted",
          "responses_received",
          "interviews_scheduled",
          "offers_received"
        ],
        "title": "ApplicationTrend",
        "description": "Application trends over time"
      },
      "AutoApplyBatchCreate": {
        "properties": {
          "job_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Job Ids"
          },
          "priority": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Priority",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "job_ids"
        ],
        "title": "AutoApplyBatchCreate",
        "description": "Create multiple auto-apply jobs at once"
      },
      "AutoApplyBatchResponse": {
        "properties": {
          "total_queued": {
            "type": "integer",
            "title": "Total Queued"
          },
          "successful": {
            "type": "integer",
            "title": "Successful"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "queued_job_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Queued Job Ids"
          }
        },
        "type": "object",
        "required": [
          "total_queued",
          "successful",
          "failed",
          "errors",
          "queued_job_ids"
        ],
        "title": "AutoApplyBatchResponse",
        "description": "Batch operation response"
      },
      "AutoApplyConfigCreate": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoApplyMode"
              }
            ],
            "default": "apply_assist"
          },
          "min_fit_score": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Min Fit Score",
            "default": 70
          },
          "max_applications_per_day": {
            "type": "integer",
            "maximum": 50.0,
            "minimum": 1.0,
            "title": "Max Applications Per Day",
            "default": 5
          },
          "max_applications_per_week": {
            "type": "integer",
            "maximum": 250.0,
            "minimum": 1.0,
            "title": "Max Applications Per Week",
            "default": 25
          },
          "remote_only": {
            "type": "boolean",
            "title": "Remote Only",
            "default": false
          },
          "hybrid_allowed": {
            "type": "boolean",
            "title": "Hybrid Allowed",
            "default": true
          },
          "onsite_allowed": {
            "type": "boolean",
            "title": "Onsite Allowed",
            "default": false
          },
          "min_salary": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Salary"
          },
          "max_salary": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Salary"
          },
          "preferred_locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Locations"
          },
          "excluded_locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Locations"
          },
          "preferred_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Companies"
          },
          "excluded_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Companies"
          },
          "employment_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EmploymentType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employment Types"
          },
          "seniority_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SeniorityLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seniority Levels"
          },
          "use_default_resume": {
            "type": "boolean",
            "title": "Use Default Resume",
            "default": true
          },
          "default_resume_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Resume Id"
          },
          "auto_generate_cover_letter": {
            "type": "boolean",
            "title": "Auto Generate Cover Letter",
            "default": true
          },
          "notify_on_apply": {
            "type": "boolean",
            "title": "Notify On Apply",
            "default": true
          },
          "notify_on_error": {
            "type": "boolean",
            "title": "Notify On Error",
            "default": true
          },
          "notify_on_refund": {
            "type": "boolean",
            "title": "Notify On Refund",
            "default": true
          }
        },
        "type": "object",
        "title": "AutoApplyConfigCreate",
        "description": "Create auto-apply configuration"
      },
      "AutoApplyConfigResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "mode": {
            "$ref": "#/components/schemas/AutoApplyMode"
          },
          "min_fit_score": {
            "type": "integer",
            "title": "Min Fit Score"
          },
          "max_applications_per_day": {
            "type": "integer",
            "title": "Max Applications Per Day"
          },
          "max_applications_per_week": {
            "type": "integer",
            "title": "Max Applications Per Week"
          },
          "remote_only": {
            "type": "boolean",
            "title": "Remote Only"
          },
          "hybrid_allowed": {
            "type": "boolean",
            "title": "Hybrid Allowed"
          },
          "onsite_allowed": {
            "type": "boolean",
            "title": "Onsite Allowed"
          },
          "min_salary": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Salary"
          },
          "max_salary": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Salary"
          },
          "preferred_locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Locations"
          },
          "excluded_locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Locations"
          },
          "preferred_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Companies"
          },
          "excluded_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Companies"
          },
          "employment_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employment Types"
          },
          "seniority_levels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seniority Levels"
          },
          "use_default_resume": {
            "type": "boolean",
            "title": "Use Default Resume"
          },
          "default_resume_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Resume Id"
          },
          "auto_generate_cover_letter": {
            "type": "boolean",
            "title": "Auto Generate Cover Letter"
          },
          "notify_on_apply": {
            "type": "boolean",
            "title": "Notify On Apply"
          },
          "notify_on_error": {
            "type": "boolean",
            "title": "Notify On Error"
          },
          "notify_on_refund": {
            "type": "boolean",
            "title": "Notify On Refund"
          },
          "pause_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pause Until"
          },
          "daily_application_count": {
            "type": "integer",
            "title": "Daily Application Count"
          },
          "weekly_application_count": {
            "type": "integer",
            "title": "Weekly Application Count"
          },
          "last_daily_reset": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Daily Reset"
          },
          "last_weekly_reset": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Weekly Reset"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "enabled",
          "mode",
          "min_fit_score",
          "max_applications_per_day",
          "max_applications_per_week",
          "remote_only",
          "hybrid_allowed",
          "onsite_allowed",
          "min_salary",
          "max_salary",
          "preferred_locations",
          "excluded_locations",
          "preferred_companies",
          "excluded_companies",
          "employment_types",
          "seniority_levels",
          "use_default_resume",
          "default_resume_id",
          "auto_generate_cover_letter",
          "notify_on_apply",
          "notify_on_error",
          "notify_on_refund",
          "pause_until",
          "daily_application_count",
          "weekly_application_count",
          "last_daily_reset",
          "last_weekly_reset",
          "created_at",
          "updated_at"
        ],
        "title": "AutoApplyConfigResponse",
        "description": "Auto-apply configuration response"
      },
      "AutoApplyConfigUpdate": {
        "properties": {
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoApplyMode"
              },
              {
                "type": "null"
              }
            ]
          },
          "min_fit_score": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Fit Score"
          },
          "max_applications_per_day": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 50.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Applications Per Day"
          },
          "max_applications_per_week": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 250.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Applications Per Week"
          },
          "remote_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remote Only"
          },
          "hybrid_allowed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hybrid Allowed"
          },
          "onsite_allowed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Onsite Allowed"
          },
          "min_salary": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Salary"
          },
          "max_salary": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Salary"
          },
          "preferred_locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Locations"
          },
          "excluded_locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Locations"
          },
          "preferred_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Companies"
          },
          "excluded_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Companies"
          },
          "employment_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EmploymentType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employment Types"
          },
          "seniority_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SeniorityLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seniority Levels"
          },
          "use_default_resume": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Default Resume"
          },
          "default_resume_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Resume Id"
          },
          "auto_generate_cover_letter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Generate Cover Letter"
          },
          "notify_on_apply": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notify On Apply"
          },
          "notify_on_error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notify On Error"
          },
          "notify_on_refund": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notify On Refund"
          }
        },
        "type": "object",
        "title": "AutoApplyConfigUpdate",
        "description": "Update auto-apply configuration"
      },
      "AutoApplyJobCreate": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "fit_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Fit Score"
          },
          "fit_rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fit Rationale"
          },
          "priority": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Priority",
            "default": 0
          },
          "resume_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Version Id"
          },
          "cover_letter_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Letter Id"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "fit_score"
        ],
        "title": "AutoApplyJobCreate",
        "description": "Create auto-apply job entry"
      },
      "AutoApplyJobDetailResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "application_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Id"
          },
          "status": {
            "$ref": "#/components/schemas/AutoApplyStatus"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "fit_score": {
            "type": "number",
            "title": "Fit Score"
          },
          "fit_rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fit Rationale"
          },
          "resume_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Version Id"
          },
          "cover_letter_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Letter Id"
          },
          "job_source": {
            "type": "string",
            "title": "Job Source"
          },
          "job_board_url": {
            "type": "string",
            "title": "Job Board Url"
          },
          "application_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Url"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "attempts": {
            "type": "integer",
            "title": "Attempts"
          },
          "max_attempts": {
            "type": "integer",
            "title": "Max Attempts"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Type"
          },
          "last_error_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error At"
          },
          "credits_used": {
            "type": "integer",
            "title": "Credits Used"
          },
          "credits_refunded": {
            "type": "boolean",
            "title": "Credits Refunded"
          },
          "refund_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refund Reason"
          },
          "refunded_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refunded At"
          },
          "user_approved": {
            "type": "boolean",
            "title": "User Approved"
          },
          "tos_compliant": {
            "type": "boolean",
            "title": "Tos Compliant"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "form_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Form Data"
          },
          "submission_response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Response"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "job_id",
          "application_id",
          "status",
          "priority",
          "fit_score",
          "fit_rationale",
          "resume_version_id",
          "cover_letter_id",
          "job_source",
          "job_board_url",
          "application_url",
          "company_name",
          "scheduled_at",
          "started_at",
          "completed_at",
          "attempts",
          "max_attempts",
          "error_message",
          "error_type",
          "last_error_at",
          "credits_used",
          "credits_refunded",
          "refund_reason",
          "refunded_at",
          "user_approved",
          "tos_compliant",
          "created_at",
          "updated_at",
          "form_data",
          "submission_response"
        ],
        "title": "AutoApplyJobDetailResponse",
        "description": "Detailed auto-apply job with form data"
      },
      "AutoApplyJobResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "application_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Id"
          },
          "status": {
            "$ref": "#/components/schemas/AutoApplyStatus"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "fit_score": {
            "type": "number",
            "title": "Fit Score"
          },
          "fit_rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fit Rationale"
          },
          "resume_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Version Id"
          },
          "cover_letter_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Letter Id"
          },
          "job_source": {
            "type": "string",
            "title": "Job Source"
          },
          "job_board_url": {
            "type": "string",
            "title": "Job Board Url"
          },
          "application_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Url"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "attempts": {
            "type": "integer",
            "title": "Attempts"
          },
          "max_attempts": {
            "type": "integer",
            "title": "Max Attempts"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Type"
          },
          "last_error_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error At"
          },
          "credits_used": {
            "type": "integer",
            "title": "Credits Used"
          },
          "credits_refunded": {
            "type": "boolean",
            "title": "Credits Refunded"
          },
          "refund_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refund Reason"
          },
          "refunded_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refunded At"
          },
          "user_approved": {
            "type": "boolean",
            "title": "User Approved"
          },
          "tos_compliant": {
            "type": "boolean",
            "title": "Tos Compliant"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "job_id",
          "application_id",
          "status",
          "priority",
          "fit_score",
          "fit_rationale",
          "resume_version_id",
          "cover_letter_id",
          "job_source",
          "job_board_url",
          "application_url",
          "company_name",
          "scheduled_at",
          "started_at",
          "completed_at",
          "attempts",
          "max_attempts",
          "error_message",
          "error_type",
          "last_error_at",
          "credits_used",
          "credits_refunded",
          "refund_reason",
          "refunded_at",
          "user_approved",
          "tos_compliant",
          "created_at",
          "updated_at"
        ],
        "title": "AutoApplyJobResponse",
        "description": "Auto-apply job response"
      },
      "AutoApplyJobUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutoApplyStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "user_approved": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Approved"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "AutoApplyJobUpdate",
        "description": "Update auto-apply job status"
      },
      "AutoApplyMode": {
        "type": "string",
        "enum": [
          "apply_assist",
          "auto_apply"
        ],
        "title": "AutoApplyMode",
        "description": "Auto-apply operation modes"
      },
      "AutoApplyStats": {
        "properties": {
          "total_queued": {
            "type": "integer",
            "title": "Total Queued"
          },
          "total_processing": {
            "type": "integer",
            "title": "Total Processing"
          },
          "total_applied": {
            "type": "integer",
            "title": "Total Applied"
          },
          "total_failed": {
            "type": "integer",
            "title": "Total Failed"
          },
          "total_refunded": {
            "type": "integer",
            "title": "Total Refunded"
          },
          "total_cancelled": {
            "type": "integer",
            "title": "Total Cancelled"
          },
          "credits_used_today": {
            "type": "integer",
            "title": "Credits Used Today"
          },
          "credits_used_this_week": {
            "type": "integer",
            "title": "Credits Used This Week"
          },
          "applications_today": {
            "type": "integer",
            "title": "Applications Today"
          },
          "applications_this_week": {
            "type": "integer",
            "title": "Applications This Week"
          },
          "success_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Success Rate"
          },
          "avg_fit_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Avg Fit Score"
          },
          "most_applied_companies": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Most Applied Companies"
          },
          "most_common_errors": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Most Common Errors"
          }
        },
        "type": "object",
        "required": [
          "total_queued",
          "total_processing",
          "total_applied",
          "total_failed",
          "total_refunded",
          "total_cancelled",
          "credits_used_today",
          "credits_used_this_week",
          "applications_today",
          "applications_this_week",
          "success_rate",
          "avg_fit_score",
          "most_applied_companies",
          "most_common_errors"
        ],
        "title": "AutoApplyStats",
        "description": "Auto-apply statistics for user dashboard"
      },
      "AutoApplyStatus": {
        "type": "string",
        "enum": [
          "queued",
          "processing",
          "applied",
          "failed",
          "refunded",
          "cancelled"
        ],
        "title": "AutoApplyStatus",
        "description": "Status of auto-apply jobs"
      },
      "BasicProfileUpdate": {
        "properties": {
          "first_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name"
        ],
        "title": "BasicProfileUpdate",
        "description": "Schema for basic profile information (Step 1)"
      },
      "BenchmarkComparison": {
        "properties": {
          "metric_name": {
            "type": "string",
            "title": "Metric Name"
          },
          "user_value": {
            "type": "number",
            "title": "User Value"
          },
          "platform_average": {
            "type": "number",
            "title": "Platform Average"
          },
          "percentile": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Percentile"
          },
          "performance": {
            "type": "string",
            "pattern": "^(below|average|above|excellent)$",
            "title": "Performance"
          }
        },
        "type": "object",
        "required": [
          "metric_name",
          "user_value",
          "platform_average",
          "percentile",
          "performance"
        ],
        "title": "BenchmarkComparison",
        "description": "Comparison with platform benchmarks"
      },
      "BillingInterval": {
        "type": "string",
        "enum": [
          "month",
          "year"
        ],
        "title": "BillingInterval",
        "description": "Billing interval"
      },
      "Body_complete_interview_api_v1_webhooks_interviews__interview_id__complete_post": {
        "properties": {
          "outcome": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outcome"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          }
        },
        "type": "object",
        "title": "Body_complete_interview_api_v1_webhooks_interviews__interview_id__complete_post"
      },
      "Body_upload_resume_api_v1_resumes_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_resume_api_v1_resumes_upload_post"
      },
      "BulkCoverLetterGenerationRequest": {
        "properties": {
          "resume_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Version Id"
          },
          "jobs": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 1,
            "title": "Jobs",
            "description": "List of jobs with title and company"
          },
          "tone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CoverLetterTone"
              }
            ],
            "default": "professional"
          },
          "length": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CoverLetterLength"
              }
            ],
            "default": "standard"
          }
        },
        "type": "object",
        "required": [
          "jobs"
        ],
        "title": "BulkCoverLetterGenerationRequest",
        "description": "Request to generate multiple cover letters"
      },
      "BulkCoverLetterResponse": {
        "properties": {
          "total_letters": {
            "type": "integer",
            "title": "Total Letters"
          },
          "successful": {
            "type": "integer",
            "title": "Successful"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "letters": {
            "items": {
              "$ref": "#/components/schemas/CoverLetterResponse"
            },
            "type": "array",
            "title": "Letters"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          }
        },
        "type": "object",
        "required": [
          "total_letters",
          "successful",
          "failed",
          "letters",
          "total_cost",
          "total_tokens"
        ],
        "title": "BulkCoverLetterResponse",
        "description": "Response for bulk generation"
      },
      "Certification": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "issuing_organization": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Issuing Organization"
          },
          "issue_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issue Date"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "credential_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credential Id"
          },
          "credential_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credential Url"
          }
        },
        "type": "object",
        "required": [
          "name",
          "issuing_organization"
        ],
        "title": "Certification",
        "description": "Certification entry"
      },
      "CheckoutSessionResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "session_url": {
            "type": "string",
            "title": "Session Url"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "session_url",
          "public_key"
        ],
        "title": "CheckoutSessionResponse",
        "description": "Stripe checkout session response"
      },
      "CompanyType": {
        "type": "string",
        "enum": [
          "faang",
          "tech",
          "enterprise",
          "fintech",
          "healthcare"
        ],
        "title": "CompanyType",
        "description": "Company types"
      },
      "ComparisonResult": {
        "properties": {
          "original_version_id": {
            "type": "string",
            "title": "Original Version Id"
          },
          "generated_version_id": {
            "type": "string",
            "title": "Generated Version Id"
          },
          "differences": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Differences"
          },
          "improvements": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Improvements"
          },
          "similarity_score": {
            "type": "number",
            "title": "Similarity Score"
          },
          "recommendation": {
            "type": "string",
            "title": "Recommendation"
          }
        },
        "type": "object",
        "required": [
          "original_version_id",
          "generated_version_id",
          "differences",
          "improvements",
          "similarity_score",
          "recommendation"
        ],
        "title": "ComparisonResult",
        "description": "Result of comparing original vs generated resume"
      },
      "ConfirmationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "declined"
        ],
        "title": "ConfirmationStatus",
        "description": "Interview confirmation status"
      },
      "ContactInfo": {
        "properties": {
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "linkedin_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Linkedin Url"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          }
        },
        "type": "object",
        "title": "ContactInfo",
        "description": "Contact information extracted from resume"
      },
      "ConversionFunnel": {
        "properties": {
          "stage": {
            "type": "string",
            "title": "Stage"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "conversion_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Conversion Rate"
          }
        },
        "type": "object",
        "required": [
          "stage",
          "count",
          "conversion_rate"
        ],
        "title": "ConversionFunnel",
        "description": "Conversion funnel from application to offer"
      },
      "CoverLetterGenerationRequest": {
        "properties": {
          "resume_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Version Id",
            "description": "Specific resume version to use"
          },
          "resume_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Id",
            "description": "Resume ID (uses default version)"
          },
          "job_title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Job Title",
            "description": "Target job title"
          },
          "company_name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Company Name",
            "description": "Company name"
          },
          "job_description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description",
            "description": "Full job description"
          },
          "tone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CoverLetterTone"
              }
            ],
            "description": "Desired tone",
            "default": "professional"
          },
          "length": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CoverLetterLength"
              }
            ],
            "description": "Desired length",
            "default": "standard"
          },
          "emphasize_skills": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Emphasize Skills",
            "description": "Skills to highlight",
            "default": []
          },
          "custom_intro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Intro",
            "description": "Custom introduction paragraph"
          },
          "company_research": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Research",
            "description": "Company insights to incorporate"
          },
          "referral_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Referral Name",
            "description": "Referral contact name and title"
          },
          "address_gap": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Gap",
            "description": "Explanation for employment gap"
          },
          "career_change_context": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Career Change Context",
            "description": "Career transition context"
          },
          "strict_factual": {
            "type": "boolean",
            "title": "Strict Factual",
            "description": "Prevent AI hallucinations",
            "default": true
          },
          "variations_count": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 1.0,
            "title": "Variations Count",
            "description": "Number of variations to generate",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "job_title",
          "company_name"
        ],
        "title": "CoverLetterGenerationRequest",
        "description": "Request to generate cover letter"
      },
      "CoverLetterLength": {
        "type": "string",
        "enum": [
          "brief",
          "standard",
          "detailed"
        ],
        "title": "CoverLetterLength",
        "description": "Cover letter length preferences"
      },
      "CoverLetterResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "resume_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Version Id"
          },
          "job_title": {
            "type": "string",
            "title": "Job Title"
          },
          "company_name": {
            "type": "string",
            "title": "Company Name"
          },
          "tone": {
            "type": "string",
            "title": "Tone"
          },
          "length": {
            "type": "string",
            "title": "Length"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "status": {
            "$ref": "#/components/schemas/CoverLetterStatus"
          },
          "token_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Usage"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "resume_version_id",
          "job_title",
          "company_name",
          "tone",
          "length",
          "content",
          "status",
          "created_at"
        ],
        "title": "CoverLetterResponse",
        "description": "Response with cover letter data"
      },
      "CoverLetterStatus": {
        "type": "string",
        "enum": [
          "draft",
          "pending",
          "processing",
          "completed",
          "failed"
        ],
        "title": "CoverLetterStatus",
        "description": "Status of cover letter generation"
      },
      "CoverLetterTone": {
        "type": "string",
        "enum": [
          "formal",
          "conversational",
          "enthusiastic",
          "professional"
        ],
        "title": "CoverLetterTone",
        "description": "Cover letter tone styles"
      },
      "CreditOperation": {
        "type": "string",
        "enum": [
          "deduct",
          "add",
          "refund",
          "reset"
        ],
        "title": "CreditOperation",
        "description": "Credit operation types"
      },
      "CreditTransaction": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "operation": {
            "$ref": "#/components/schemas/CreditOperation"
          },
          "credit_type": {
            "type": "string",
            "title": "Credit Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "balance_after": {
            "type": "integer",
            "title": "Balance After"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "reference_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "operation",
          "credit_type",
          "amount",
          "balance_after",
          "description",
          "reference_id",
          "created_at"
        ],
        "title": "CreditTransaction",
        "description": "Credit transaction record"
      },
      "CreditWalletResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "ai_credits": {
            "type": "integer",
            "title": "Ai Credits"
          },
          "cover_letter_credits": {
            "type": "integer",
            "title": "Cover Letter Credits"
          },
          "auto_apply_credits": {
            "type": "integer",
            "title": "Auto Apply Credits"
          },
          "job_suggestion_credits": {
            "type": "integer",
            "title": "Job Suggestion Credits"
          },
          "total_earned": {
            "type": "integer",
            "title": "Total Earned"
          },
          "total_spent": {
            "type": "integer",
            "title": "Total Spent"
          },
          "last_reset": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reset"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "ai_credits",
          "cover_letter_credits",
          "auto_apply_credits",
          "job_suggestion_credits",
          "total_earned",
          "total_spent",
          "last_reset"
        ],
        "title": "CreditWalletResponse",
        "description": "User's credit wallet"
      },
      "DashboardExport": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          },
          "time_range": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "overview": {
            "$ref": "#/components/schemas/DashboardOverview"
          },
          "detailed_analytics": {
            "$ref": "#/components/schemas/DetailedAnalytics"
          },
          "activity_timeline": {
            "$ref": "#/components/schemas/ActivityTimeline"
          },
          "anomaly_report": {
            "$ref": "#/components/schemas/AnomalyReport"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "generated_at",
          "time_range",
          "overview",
          "detailed_analytics",
          "activity_timeline",
          "anomaly_report"
        ],
        "title": "DashboardExport",
        "description": "Exportable dashboard data"
      },
      "DashboardOverview": {
        "properties": {
          "pipeline_stats": {
            "$ref": "#/components/schemas/ApplicationPipelineStats"
          },
          "success_metrics": {
            "$ref": "#/components/schemas/SuccessMetrics"
          },
          "health_score": {
            "$ref": "#/components/schemas/JobSearchHealthScore"
          },
          "recent_activity": {
            "items": {
              "$ref": "#/components/schemas/ActivityItem"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Recent Activity"
          },
          "anomalies": {
            "items": {
              "$ref": "#/components/schemas/Anomaly"
            },
            "type": "array",
            "title": "Anomalies"
          },
          "applications_this_week": {
            "type": "integer",
            "title": "Applications This Week"
          },
          "interviews_this_week": {
            "type": "integer",
            "title": "Interviews This Week"
          },
          "offers_pending": {
            "type": "integer",
            "title": "Offers Pending"
          },
          "new_matches_count": {
            "type": "integer",
            "title": "New Matches Count"
          }
        },
        "type": "object",
        "required": [
          "pipeline_stats",
          "success_metrics",
          "health_score",
          "applications_this_week",
          "interviews_this_week",
          "offers_pending",
          "new_matches_count"
        ],
        "title": "DashboardOverview",
        "description": "Complete dashboard overview"
      },
      "DetailedAnalytics": {
        "properties": {
          "time_range": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "pipeline_stats": {
            "$ref": "#/components/schemas/ApplicationPipelineStats"
          },
          "pipeline_distribution": {
            "items": {
              "$ref": "#/components/schemas/PipelineStageDistribution"
            },
            "type": "array",
            "title": "Pipeline Distribution"
          },
          "success_metrics": {
            "$ref": "#/components/schemas/SuccessMetrics"
          },
          "conversion_funnel": {
            "items": {
              "$ref": "#/components/schemas/ConversionFunnel"
            },
            "type": "array",
            "title": "Conversion Funnel"
          },
          "application_trends": {
            "items": {
              "$ref": "#/components/schemas/ApplicationTrend"
            },
            "type": "array",
            "title": "Application Trends"
          },
          "time_series_charts": {
            "items": {
              "$ref": "#/components/schemas/TimeSeriesChart"
            },
            "type": "array",
            "title": "Time Series Charts"
          },
          "peer_comparison": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PeerComparison"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "time_range",
          "pipeline_stats",
          "pipeline_distribution",
          "success_metrics",
          "conversion_funnel",
          "application_trends",
          "time_series_charts"
        ],
        "title": "DetailedAnalytics",
        "description": "Detailed analytics with trends"
      },
      "Education": {
        "properties": {
          "institution": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Institution"
          },
          "degree": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Degree"
          },
          "field_of_study": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Field Of Study"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "gpa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gpa"
          },
          "honors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Honors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "institution"
        ],
        "title": "Education",
        "description": "Education entry"
      },
      "EmploymentType": {
        "type": "string",
        "enum": [
          "full-time",
          "part-time",
          "contract",
          "internship"
        ],
        "title": "EmploymentType",
        "description": "Employment types"
      },
      "ExperienceLevel": {
        "type": "string",
        "enum": [
          "entry",
          "mid",
          "senior",
          "staff",
          "principal"
        ],
        "title": "ExperienceLevel",
        "description": "Experience levels"
      },
      "FitIndexBreakdown": {
        "properties": {
          "skill_match_score": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 0.0,
            "title": "Skill Match Score",
            "description": "Max 60 points"
          },
          "experience_score": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 0.0,
            "title": "Experience Score",
            "description": "Max 20 points"
          },
          "seniority_score": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Seniority Score",
            "description": "Max 10 points"
          },
          "semantic_similarity": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Semantic Similarity",
            "description": "Max 10 points"
          },
          "total": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Total",
            "description": "Total Fit Index"
          }
        },
        "type": "object",
        "required": [
          "skill_match_score",
          "experience_score",
          "seniority_score",
          "semantic_similarity",
          "total"
        ],
        "title": "FitIndexBreakdown",
        "description": "Detailed breakdown of Fit Index calculation"
      },
      "GenerationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "processing",
          "completed",
          "failed"
        ],
        "title": "GenerationStatus",
        "description": "Status of AI generation"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthScoreComponent": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Score"
          },
          "weight": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Weight"
          },
          "recommendation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendation"
          }
        },
        "type": "object",
        "required": [
          "name",
          "score",
          "weight"
        ],
        "title": "HealthScoreComponent",
        "description": "Individual component of health score"
      },
      "HealthScoreLevel": {
        "type": "string",
        "enum": [
          "excellent",
          "good",
          "fair",
          "needs_improvement"
        ],
        "title": "HealthScoreLevel",
        "description": "Health score levels"
      },
      "ImprovementSuggestion": {
        "properties": {
          "section": {
            "type": "string",
            "title": "Section"
          },
          "current_text": {
            "type": "string",
            "title": "Current Text"
          },
          "suggested_text": {
            "type": "string",
            "title": "Suggested Text"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "priority": {
            "type": "string",
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "section",
          "current_text",
          "suggested_text",
          "reason",
          "priority"
        ],
        "title": "ImprovementSuggestion",
        "description": "AI suggestion for resume improvement"
      },
      "InterviewOutcome": {
        "type": "string",
        "enum": [
          "passed",
          "failed",
          "pending_feedback",
          "strong_yes",
          "yes",
          "no",
          "strong_no"
        ],
        "title": "InterviewOutcome",
        "description": "Interview outcome"
      },
      "InterviewQuestionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "question_number": {
            "type": "integer",
            "title": "Question Number"
          },
          "question_text": {
            "type": "string",
            "title": "Question Text"
          },
          "question_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Question Category"
          },
          "difficulty_level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Difficulty Level"
          },
          "user_answer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Answer"
          },
          "time_taken_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Taken Seconds"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "ai_feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Feedback"
          },
          "sample_answer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Answer"
          },
          "strengths": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strengths"
          },
          "improvements": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Improvements"
          },
          "has_situation": {
            "type": "boolean",
            "title": "Has Situation",
            "default": false
          },
          "has_task": {
            "type": "boolean",
            "title": "Has Task",
            "default": false
          },
          "has_action": {
            "type": "boolean",
            "title": "Has Action",
            "default": false
          },
          "has_result": {
            "type": "boolean",
            "title": "Has Result",
            "default": false
          },
          "star_completeness_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Star Completeness Score"
          },
          "is_answered": {
            "type": "boolean",
            "title": "Is Answered",
            "default": false
          },
          "asked_at": {
            "type": "string",
            "format": "date-time",
            "title": "Asked At"
          },
          "answered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Answered At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_id",
          "question_number",
          "question_text",
          "asked_at"
        ],
        "title": "InterviewQuestionResponse",
        "description": "Response schema for interview question"
      },
      "InterviewScheduleCreate": {
        "properties": {
          "application_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Id"
          },
          "interview_type": {
            "$ref": "#/components/schemas/app__schemas__webhook__InterviewType"
          },
          "interview_round": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Interview Round",
            "default": 1
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 15.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "meeting_link": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Meeting Link"
          },
          "dial_in_info": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Dial In Info"
          },
          "interviewer_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interviewer Names"
          },
          "interviewer_emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interviewer Emails"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "extra_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "webhook_event_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Event Id"
          },
          "external_event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Event Id"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "interview_type",
          "user_id"
        ],
        "title": "InterviewScheduleCreate",
        "description": "Create interview schedule schema"
      },
      "InterviewScheduleResponse": {
        "properties": {
          "application_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Id"
          },
          "interview_type": {
            "$ref": "#/components/schemas/InterviewType-Output"
          },
          "interview_round": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Interview Round",
            "default": 1
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 15.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "meeting_link": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Meeting Link"
          },
          "dial_in_info": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Dial In Info"
          },
          "interviewer_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interviewer Names"
          },
          "interviewer_emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interviewer Emails"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "extra_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/InterviewStatus"
          },
          "confirmation_status": {
            "$ref": "#/components/schemas/ConfirmationStatus"
          },
          "reminder_sent": {
            "type": "boolean",
            "title": "Reminder Sent"
          },
          "reminder_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder Sent At"
          },
          "external_event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Event Id"
          },
          "calendar_invite_sent": {
            "type": "boolean",
            "title": "Calendar Invite Sent"
          },
          "webhook_event_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Event Id"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterviewOutcome"
              },
              {
                "type": "null"
              }
            ]
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "interview_type",
          "id",
          "user_id",
          "status",
          "confirmation_status",
          "reminder_sent",
          "calendar_invite_sent",
          "created_at",
          "updated_at"
        ],
        "title": "InterviewScheduleResponse",
        "description": "Interview schedule response schema"
      },
      "InterviewScheduleUpdate": {
        "properties": {
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 15.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "meeting_link": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Meeting Link"
          },
          "dial_in_info": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Dial In Info"
          },
          "interviewer_names": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interviewer Names"
          },
          "interviewer_emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interviewer Emails"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterviewStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "confirmation_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfirmationStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InterviewOutcome"
              },
              {
                "type": "null"
              }
            ]
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "extra_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data"
          }
        },
        "type": "object",
        "title": "InterviewScheduleUpdate",
        "description": "Update interview schedule schema"
      },
      "InterviewSessionCreate": {
        "properties": {
          "interview_type": {
            "$ref": "#/components/schemas/app__schemas__interview__InterviewType"
          },
          "role_level": {
            "$ref": "#/components/schemas/RoleLevel"
          },
          "company_type": {
            "$ref": "#/components/schemas/CompanyType"
          },
          "focus_area": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Focus Area",
            "description": "e.g., 'python', 'frontend'"
          },
          "target_company": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Company",
            "description": "Optional specific company"
          },
          "target_role": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Role",
            "description": "Optional specific role"
          },
          "total_questions": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Total Questions",
            "description": "Number of questions in session",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "interview_type",
          "role_level",
          "company_type"
        ],
        "title": "InterviewSessionCreate",
        "description": "Schema for creating a new interview session",
        "example": {
          "company_type": "tech",
          "focus_area": "python",
          "interview_type": "technical",
          "role_level": "senior",
          "target_company": "Google",
          "target_role": "Senior Software Engineer",
          "total_questions": 5
        }
      },
      "InterviewSessionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "interview_type": {
            "type": "string",
            "title": "Interview Type"
          },
          "role_level": {
            "type": "string",
            "title": "Role Level"
          },
          "company_type": {
            "type": "string",
            "title": "Company Type"
          },
          "focus_area": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Focus Area"
          },
          "target_company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Company"
          },
          "target_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Role"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "total_questions": {
            "type": "integer",
            "title": "Total Questions"
          },
          "questions_answered": {
            "type": "integer",
            "title": "Questions Answered"
          },
          "overall_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overall Score"
          },
          "star_framework_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Star Framework Score"
          },
          "technical_accuracy_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Technical Accuracy Score"
          },
          "communication_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Communication Score"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "strengths": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strengths"
          },
          "improvement_areas": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Improvement Areas"
          },
          "feedback_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Summary"
          },
          "completion_percentage": {
            "type": "number",
            "title": "Completion Percentage",
            "default": 0.0
          },
          "is_completed": {
            "type": "boolean",
            "title": "Is Completed",
            "default": false
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "questions": {
            "items": {
              "$ref": "#/components/schemas/InterviewQuestionResponse"
            },
            "type": "array",
            "title": "Questions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "interview_type",
          "role_level",
          "company_type",
          "status",
          "total_questions",
          "questions_answered",
          "started_at"
        ],
        "title": "InterviewSessionResponse",
        "description": "Response schema for interview session"
      },
      "InterviewStatistics": {
        "properties": {
          "total_interviews": {
            "type": "integer",
            "title": "Total Interviews"
          },
          "upcoming_interviews": {
            "type": "integer",
            "title": "Upcoming Interviews"
          },
          "completed_interviews": {
            "type": "integer",
            "title": "Completed Interviews"
          },
          "cancelled_interviews": {
            "type": "integer",
            "title": "Cancelled Interviews"
          },
          "interviews_by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Interviews By Type"
          },
          "interviews_by_outcome": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Interviews By Outcome"
          },
          "average_interview_duration_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Interview Duration Minutes"
          },
          "confirmation_rate_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmation Rate Percentage"
          },
          "no_show_rate_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Show Rate Percentage"
          }
        },
        "type": "object",
        "required": [
          "total_interviews",
          "upcoming_interviews",
          "completed_interviews",
          "cancelled_interviews",
          "interviews_by_type",
          "interviews_by_outcome"
        ],
        "title": "InterviewStatistics",
        "description": "Interview statistics"
      },
      "InterviewStatus": {
        "type": "string",
        "enum": [
          "scheduled",
          "confirmed",
          "rescheduled",
          "completed",
          "cancelled",
          "no_show"
        ],
        "title": "InterviewStatus",
        "description": "Interview status"
      },
      "InterviewType-Output": {
        "type": "string",
        "enum": [
          "phone_screen",
          "recruiter_screen",
          "technical",
          "coding",
          "system_design",
          "behavioral",
          "cultural_fit",
          "onsite",
          "final",
          "panel",
          "other"
        ],
        "title": "InterviewType",
        "description": "Types of interviews"
      },
      "JobIngestionRequest": {
        "properties": {
          "sources": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources"
          },
          "incremental": {
            "type": "boolean",
            "title": "Incremental",
            "description": "Only fetch updated jobs",
            "default": true
          },
          "max_jobs": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Jobs"
          },
          "department_filter": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department Filter"
          }
        },
        "type": "object",
        "title": "JobIngestionRequest",
        "description": "Request to ingest jobs from source"
      },
      "JobIngestionResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "metadata": {
            "$ref": "#/components/schemas/JobMetadata"
          },
          "jobs_skipped": {
            "type": "integer",
            "title": "Jobs Skipped"
          },
          "errors": {
            "type": "integer",
            "title": "Errors"
          },
          "processing_time_seconds": {
            "type": "number",
            "title": "Processing Time Seconds"
          },
          "error_messages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Error Messages",
            "default": []
          },
          "last_job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Job Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "metadata",
          "jobs_skipped",
          "errors",
          "processing_time_seconds"
        ],
        "title": "JobIngestionResult",
        "description": "Result of job ingestion"
      },
      "JobMatchRationale": {
        "properties": {
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "matching_skills": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Matching Skills"
          },
          "skill_gaps": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Skill Gaps"
          },
          "transferable_skills": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Transferable Skills",
            "default": []
          },
          "experience_match": {
            "type": "string",
            "title": "Experience Match"
          },
          "experience_details": {
            "type": "string",
            "title": "Experience Details"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "summary",
          "matching_skills",
          "skill_gaps",
          "experience_match",
          "experience_details"
        ],
        "title": "JobMatchRationale",
        "description": "Explanation for job match score"
      },
      "JobMatchRequest": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "resume_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resume Id"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/JobSearchFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 10
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          }
        },
        "type": "object",
        "title": "JobMatchRequest",
        "description": "Request for job matching"
      },
      "JobMatchResponse": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "job_title": {
            "type": "string",
            "title": "Job Title"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "location_type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "salary_range": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Salary Range"
          },
          "fit_index": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Fit Index"
          },
          "match_quality": {
            "$ref": "#/components/schemas/MatchQuality"
          },
          "rationale": {
            "$ref": "#/components/schemas/JobMatchRationale"
          },
          "breakdown": {
            "$ref": "#/components/schemas/FitIndexBreakdown"
          },
          "skill_matches": {
            "items": {
              "$ref": "#/components/schemas/SkillMatch"
            },
            "type": "array",
            "title": "Skill Matches"
          },
          "posted_date": {
            "type": "string",
            "format": "date-time",
            "title": "Posted Date"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "job_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Url"
          },
          "requires_visa_sponsorship": {
            "type": "boolean",
            "title": "Requires Visa Sponsorship"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "job_title",
          "company",
          "location",
          "location_type",
          "fit_index",
          "match_quality",
          "rationale",
          "breakdown",
          "skill_matches",
          "posted_date",
          "source",
          "requires_visa_sponsorship"
        ],
        "title": "JobMatchResponse",
        "description": "Job match result"
      },
      "JobMetadata": {
        "properties": {
          "total_fetched": {
            "type": "integer",
            "title": "Total Fetched"
          },
          "new_jobs": {
            "type": "integer",
            "title": "New Jobs"
          },
          "updated_jobs": {
            "type": "integer",
            "title": "Updated Jobs"
          },
          "failed_jobs": {
            "type": "integer",
            "title": "Failed Jobs"
          },
          "fetch_duration_seconds": {
            "type": "number",
            "title": "Fetch Duration Seconds"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "total_fetched",
          "new_jobs",
          "updated_jobs",
          "failed_jobs",
          "fetch_duration_seconds"
        ],
        "title": "JobMetadata",
        "description": "Metadata for job fetch results"
      },
      "JobPreferencesUpdate": {
        "properties": {
          "target_titles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 1,
            "title": "Target Titles",
            "description": "Target job titles"
          },
          "salary_min": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Salary Min",
            "description": "Minimum desired salary"
          },
          "salary_max": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Salary Max",
            "description": "Maximum desired salary"
          },
          "industries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Industries",
            "description": "Target industries",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "target_titles"
        ],
        "title": "JobPreferencesUpdate",
        "description": "Schema for job preferences (Step 2)"
      },
      "JobSearchFilters": {
        "properties": {
          "min_fit_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Fit Index"
          },
          "max_fit_index": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Fit Index"
          },
          "locations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locations"
          },
          "location_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LocationType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Types"
          },
          "min_salary": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Salary"
          },
          "max_salary": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Salary"
          },
          "visa_sponsorship": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visa Sponsorship"
          },
          "experience_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExperienceLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Experience Levels"
          },
          "industries": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industries"
          },
          "company_sizes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Sizes"
          },
          "exclude_companies": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exclude Companies"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "posted_within_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted Within Days"
          }
        },
        "type": "object",
        "title": "JobSearchFilters",
        "description": "Job search filters"
      },
      "JobSearchHealthScore": {
        "properties": {
          "overall_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Overall Score"
          },
          "level": {
            "$ref": "#/components/schemas/HealthScoreLevel"
          },
          "components": {
            "items": {
              "$ref": "#/components/schemas/HealthScoreComponent"
            },
            "type": "array",
            "title": "Components"
          },
          "activity_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Activity Score"
          },
          "quality_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Quality Score"
          },
          "response_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Response Score"
          },
          "success_score": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Success Score"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "strengths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Strengths"
          },
          "areas_for_improvement": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Areas For Improvement"
          }
        },
        "type": "object",
        "required": [
          "overall_score",
          "level",
          "components",
          "activity_score",
          "quality_score",
          "response_score",
          "success_score",
          "recommendations",
          "strengths",
          "areas_for_improvement"
        ],
        "title": "JobSearchHealthScore",
        "description": "Overall job search health score"
      },
      "JobSource": {
        "type": "string",
        "enum": [
          "greenhouse",
          "lever",
          "manual",
          "user_referral"
        ],
        "title": "JobSource",
        "description": "Job source types"
      },
      "LocationType": {
        "type": "string",
        "enum": [
          "remote",
          "hybrid",
          "onsite"
        ],
        "title": "LocationType",
        "description": "Location types"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "MatchQuality": {
        "type": "string",
        "enum": [
          "excellent",
          "good",
          "partial",
          "low"
        ],
        "title": "MatchQuality",
        "description": "Match quality labels"
      },
      "NotificationCategory": {
        "type": "string",
        "enum": [
          "jobs",
          "applications",
          "account",
          "billing",
          "system"
        ],
        "title": "NotificationCategory",
        "description": "Notification categories"
      },
      "NotificationCreate": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "title": "Message"
          },
          "action_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url"
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationPriority"
              }
            ],
            "default": "normal"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NotificationCategory"
              },
              {
                "type": "null"
              }
            ]
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "type",
          "title",
          "message"
        ],
        "title": "NotificationCreate",
        "description": "Schema for creating a notification",
        "example": {
          "action_url": "/dashboard/jobs/123",
          "category": "jobs",
          "data": {
            "fit_score": 95,
            "job_id": 123
          },
          "message": "We found a Senior Software Engineer role at Google that's a 95% match for your profile.",
          "priority": "high",
          "title": "New High-Fit Job Match!",
          "type": "job_match"
        }
      },
      "NotificationPreferenceResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "email_job_matches": {
            "type": "boolean",
            "title": "Email Job Matches"
          },
          "email_application_updates": {
            "type": "boolean",
            "title": "Email Application Updates"
          },
          "email_interview_reminders": {
            "type": "boolean",
            "title": "Email Interview Reminders"
          },
          "email_credit_alerts": {
            "type": "boolean",
            "title": "Email Credit Alerts"
          },
          "email_weekly_digest": {
            "type": "boolean",
            "title": "Email Weekly Digest"
          },
          "email_marketing": {
            "type": "boolean",
            "title": "Email Marketing"
          },
          "inapp_job_matches": {
            "type": "boolean",
            "title": "Inapp Job Matches"
          },
          "inapp_application_updates": {
            "type": "boolean",
            "title": "Inapp Application Updates"
          },
          "inapp_interview_reminders": {
            "type": "boolean",
            "title": "Inapp Interview Reminders"
          },
          "inapp_credit_alerts": {
            "type": "boolean",
            "title": "Inapp Credit Alerts"
          },
          "inapp_system_updates": {
            "type": "boolean",
            "title": "Inapp System Updates"
          },
          "job_match_frequency": {
            "type": "string",
            "title": "Job Match Frequency"
          },
          "digest_day": {
            "type": "string",
            "title": "Digest Day"
          },
          "quiet_hours_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Start"
          },
          "quiet_hours_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours End"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "email_job_matches",
          "email_application_updates",
          "email_interview_reminders",
          "email_credit_alerts",
          "email_weekly_digest",
          "email_marketing",
          "inapp_job_matches",
          "inapp_application_updates",
          "inapp_interview_reminders",
          "inapp_credit_alerts",
          "inapp_system_updates",
          "job_match_frequency",
          "digest_day",
          "created_at",
          "updated_at"
        ],
        "title": "NotificationPreferenceResponse",
        "description": "Response schema for notification preferences"
      },
      "NotificationPreferenceUpdate": {
        "properties": {
          "email_job_matches": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Job Matches"
          },
          "email_application_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Application Updates"
          },
          "email_interview_reminders": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Interview Reminders"
          },
          "email_credit_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Credit Alerts"
          },
          "email_weekly_digest": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Weekly Digest"
          },
          "email_marketing": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Marketing"
          },
          "inapp_job_matches": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inapp Job Matches"
          },
          "inapp_application_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inapp Application Updates"
          },
          "inapp_interview_reminders": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inapp Interview Reminders"
          },
          "inapp_credit_alerts": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inapp Credit Alerts"
          },
          "inapp_system_updates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inapp System Updates"
          },
          "job_match_frequency": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(immediate|daily|weekly)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Match Frequency"
          },
          "digest_day": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(monday|tuesday|wednesday|thursday|friday|saturday|sunday)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Digest Day"
          },
          "quiet_hours_start": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 23.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours Start"
          },
          "quiet_hours_end": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 23.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Quiet Hours End"
          }
        },
        "type": "object",
        "title": "NotificationPreferenceUpdate",
        "description": "Schema for updating notification preferences"
      },
      "NotificationPriority": {
        "type": "string",
        "enum": [
          "low",
          "normal",
          "high",
          "urgent"
        ],
        "title": "NotificationPriority",
        "description": "Notification priority levels"
      },
      "NotificationResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "action_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url"
          },
          "priority": {
            "type": "string",
            "title": "Priority"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "email_sent": {
            "type": "boolean",
            "title": "Email Sent"
          },
          "email_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Sent At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_expired": {
            "type": "boolean",
            "title": "Is Expired",
            "default": false
          },
          "is_unread": {
            "type": "boolean",
            "title": "Is Unread",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "type",
          "title",
          "message",
          "priority",
          "is_read",
          "is_archived",
          "email_sent",
          "created_at"
        ],
        "title": "NotificationResponse",
        "description": "Response schema for notification"
      },
      "NotificationStats": {
        "properties": {
          "total_notifications": {
            "type": "integer",
            "title": "Total Notifications",
            "default": 0
          },
          "unread_count": {
            "type": "integer",
            "title": "Unread Count",
            "default": 0
          },
          "by_category": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Category"
          },
          "by_priority": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Priority"
          },
          "recent_notifications": {
            "items": {
              "$ref": "#/components/schemas/NotificationResponse"
            },
            "type": "array",
            "title": "Recent Notifications"
          }
        },
        "type": "object",
        "title": "NotificationStats",
        "description": "User's notification statistics"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "job_match",
          "application_status",
          "interview_reminder",
          "credit_low",
          "credit_refund",
          "weekly_digest",
          "system_update",
          "marketing"
        ],
        "title": "NotificationType",
        "description": "Notification types"
      },
      "OAuthProvider": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "id_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Token"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "access_token"
        ],
        "title": "OAuthProvider",
        "description": "OAuth provider data for social login"
      },
      "OptimizationStyle": {
        "type": "string",
        "enum": [
          "ats_optimized",
          "creative",
          "executive",
          "technical"
        ],
        "title": "OptimizationStyle",
        "description": "Resume optimization styles"
      },
      "ParsedResumeData": {
        "properties": {
          "contact_info": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "work_experience": {
            "items": {
              "$ref": "#/components/schemas/WorkExperience"
            },
            "type": "array",
            "title": "Work Experience",
            "default": []
          },
          "education": {
            "items": {
              "$ref": "#/components/schemas/Education"
            },
            "type": "array",
            "title": "Education",
            "default": []
          },
          "skills": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Skills",
            "default": []
          },
          "certifications": {
            "items": {
              "$ref": "#/components/schemas/Certification"
            },
            "type": "array",
            "title": "Certifications",
            "default": []
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Languages",
            "default": []
          },
          "projects": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Projects",
            "default": []
          },
          "awards": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Awards",
            "default": []
          },
          "publications": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Publications",
            "default": []
          },
          "raw_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Text"
          }
        },
        "type": "object",
        "title": "ParsedResumeData",
        "description": "Complete parsed resume data structure"
      },
      "PeerComparison": {
        "properties": {
          "total_applications": {
            "$ref": "#/components/schemas/BenchmarkComparison"
          },
          "response_rate": {
            "$ref": "#/components/schemas/BenchmarkComparison"
          },
          "interview_rate": {
            "$ref": "#/components/schemas/BenchmarkComparison"
          },
          "offer_rate": {
            "$ref": "#/components/schemas/BenchmarkComparison"
          },
          "avg_time_to_offer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BenchmarkComparison"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "total_applications",
          "response_rate",
          "interview_rate",
          "offer_rate"
        ],
        "title": "PeerComparison",
        "description": "Comparison with similar users"
      },
      "PipelineStageDistribution": {
        "properties": {
          "stage": {
            "type": "string",
            "title": "Stage"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "percentage": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Percentage"
          }
        },
        "type": "object",
        "required": [
          "stage",
          "count",
          "percentage"
        ],
        "title": "PipelineStageDistribution",
        "description": "Distribution of applications across pipeline stages"
      },
      "ProcessWebhookRequest": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "force_reprocess": {
            "type": "boolean",
            "title": "Force Reprocess",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "event_id"
        ],
        "title": "ProcessWebhookRequest",
        "description": "Request to manually process a webhook event"
      },
      "ProcessWebhookResponse": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "status": {
            "$ref": "#/components/schemas/WebhookEventStatus"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "application_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Id"
          },
          "status_changes": {
            "items": {
              "$ref": "#/components/schemas/ApplicationStatusHistoryResponse"
            },
            "type": "array",
            "title": "Status Changes",
            "default": []
          },
          "interviews_scheduled": {
            "items": {
              "$ref": "#/components/schemas/InterviewScheduleResponse"
            },
            "type": "array",
            "title": "Interviews Scheduled",
            "default": []
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "status"
        ],
        "title": "ProcessWebhookResponse",
        "description": "Response from processing a webhook event"
      },
      "ProficiencyLevel": {
        "type": "string",
        "enum": [
          "beginner",
          "intermediate",
          "advanced",
          "expert"
        ],
        "title": "ProficiencyLevel",
        "description": "Skill proficiency levels"
      },
      "QuestionFeedback": {
        "properties": {
          "score": {
            "type": "number",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Score",
            "description": "Score from 0-10"
          },
          "ai_feedback": {
            "type": "string",
            "title": "Ai Feedback",
            "description": "Detailed AI feedback"
          },
          "sample_answer": {
            "type": "string",
            "title": "Sample Answer",
            "description": "Example of a strong answer"
          },
          "strengths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Strengths",
            "description": "What was done well"
          },
          "improvements": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Improvements",
            "description": "Areas to improve"
          },
          "has_situation": {
            "type": "boolean",
            "title": "Has Situation",
            "default": false
          },
          "has_task": {
            "type": "boolean",
            "title": "Has Task",
            "default": false
          },
          "has_action": {
            "type": "boolean",
            "title": "Has Action",
            "default": false
          },
          "has_result": {
            "type": "boolean",
            "title": "Has Result",
            "default": false
          },
          "star_completeness_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Star Completeness Score"
          }
        },
        "type": "object",
        "required": [
          "score",
          "ai_feedback",
          "sample_answer"
        ],
        "title": "QuestionFeedback",
        "description": "Feedback on a single answer",
        "example": {
          "ai_feedback": "Great answer! You provided specific metrics and demonstrated impact...",
          "has_action": true,
          "has_result": true,
          "has_situation": true,
          "has_task": true,
          "improvements": [
            "Could elaborate on team collaboration",
            "Add more technical depth"
          ],
          "sample_answer": "In my role as a senior engineer at TechCo...",
          "score": 8.5,
          "star_completeness_score": 9.0,
          "strengths": [
            "Used specific metrics",
            "Clear structure",
            "Demonstrated impact"
          ]
        }
      },
      "QueueResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/AutoApplyJobResponse"
            },
            "type": "array",
            "title": "Jobs"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "total",
          "jobs",
          "page",
          "page_size",
          "has_more"
        ],
        "title": "QueueResponse",
        "description": "Auto-apply queue response with pagination"
      },
      "RefundRequest": {
        "properties": {
          "reason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 10,
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "RefundRequest",
        "description": "Request credit refund for failed/invalid application"
      },
      "RefundResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "credits_refunded": {
            "type": "integer",
            "title": "Credits Refunded"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "credits_refunded",
          "message"
        ],
        "title": "RefundResponse",
        "description": "Refund operation response"
      },
      "ResumeLength": {
        "type": "string",
        "enum": [
          "one_page",
          "two_page",
          "detailed"
        ],
        "title": "ResumeLength",
        "description": "Resume length preferences"
      },
      "ResumeTone": {
        "type": "string",
        "enum": [
          "formal",
          "conversational",
          "concise"
        ],
        "title": "ResumeTone",
        "description": "Resume tone styles"
      },
      "ResumeUpdateRequest": {
        "properties": {
          "parsed_data": {
            "$ref": "#/components/schemas/ParsedResumeData"
          }
        },
        "type": "object",
        "required": [
          "parsed_data"
        ],
        "title": "ResumeUpdateRequest",
        "description": "Request to update resume parsed data"
      },
      "RoleLevel": {
        "type": "string",
        "enum": [
          "junior",
          "mid",
          "senior",
          "staff"
        ],
        "title": "RoleLevel",
        "description": "Role seniority levels"
      },
      "SectionRegenerationRequest": {
        "properties": {
          "resume_version_id": {
            "type": "string",
            "title": "Resume Version Id",
            "description": "Resume version to update"
          },
          "sections": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Sections",
            "description": "Sections to regenerate"
          },
          "tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResumeTone"
              },
              {
                "type": "null"
              }
            ],
            "description": "Tone for regenerated sections"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions",
            "description": "Specific instructions"
          }
        },
        "type": "object",
        "required": [
          "resume_version_id",
          "sections"
        ],
        "title": "SectionRegenerationRequest",
        "description": "Request to regenerate specific resume sections"
      },
      "SeniorityLevel": {
        "type": "string",
        "enum": [
          "entry",
          "mid",
          "senior",
          "staff",
          "principal"
        ],
        "title": "SeniorityLevel",
        "description": "Seniority levels"
      },
      "SessionStats": {
        "properties": {
          "total_sessions": {
            "type": "integer",
            "title": "Total Sessions",
            "default": 0
          },
          "sessions_completed": {
            "type": "integer",
            "title": "Sessions Completed",
            "default": 0
          },
          "total_questions_answered": {
            "type": "integer",
            "title": "Total Questions Answered",
            "default": 0
          },
          "average_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Score"
          },
          "improvement_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Improvement Rate"
          },
          "sessions_by_type": {
            "type": "object",
            "title": "Sessions By Type"
          },
          "recent_sessions": {
            "items": {
              "$ref": "#/components/schemas/InterviewSessionResponse"
            },
            "type": "array",
            "title": "Recent Sessions"
          }
        },
        "type": "object",
        "title": "SessionStats",
        "description": "User's interview practice statistics",
        "example": {
          "average_score": 8.2,
          "improvement_rate": 15.0,
          "recent_sessions": [],
          "sessions_by_type": {
            "behavioral": 8,
            "system-design": 3,
            "technical": 12
          },
          "sessions_completed": 20,
          "total_questions_answered": 156,
          "total_sessions": 23
        }
      },
      "SkillInput": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "description": "Skill name"
          },
          "proficiency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProficiencyLevel"
              }
            ],
            "description": "Proficiency level"
          }
        },
        "type": "object",
        "required": [
          "name",
          "proficiency"
        ],
        "title": "SkillInput",
        "description": "Schema for skill input"
      },
      "SkillMatch": {
        "properties": {
          "skill": {
            "type": "string",
            "title": "Skill"
          },
          "user_has": {
            "type": "boolean",
            "title": "User Has"
          },
          "user_years": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Years"
          },
          "required_level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required Level"
          },
          "similarity_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Similarity Score"
          },
          "is_transferable": {
            "type": "boolean",
            "title": "Is Transferable",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "skill",
          "user_has",
          "similarity_score"
        ],
        "title": "SkillMatch",
        "description": "Individual skill match details"
      },
      "SkillsUpdate": {
        "properties": {
          "skills": {
            "items": {
              "$ref": "#/components/schemas/SkillInput"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Skills",
            "description": "User skills"
          }
        },
        "type": "object",
        "required": [
          "skills"
        ],
        "title": "SkillsUpdate",
        "description": "Schema for skills update (Step 3)"
      },
      "StatusChangeSource": {
        "type": "string",
        "enum": [
          "system",
          "webhook",
          "user",
          "admin",
          "auto_apply"
        ],
        "title": "StatusChangeSource",
        "description": "Source of status change"
      },
      "SubscriptionCancelRequest": {
        "properties": {
          "immediate": {
            "type": "boolean",
            "title": "Immediate",
            "description": "Cancel immediately vs at period end",
            "default": false
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Cancellation reason"
          }
        },
        "type": "object",
        "title": "SubscriptionCancelRequest",
        "description": "Request to cancel subscription"
      },
      "SubscriptionCreateRequest": {
        "properties": {
          "plan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlan"
              }
            ],
            "description": "Subscription plan"
          },
          "billing_interval": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingInterval"
              }
            ],
            "description": "Billing interval",
            "default": "month"
          },
          "promo_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Promo Code",
            "description": "Promotional code"
          },
          "success_url": {
            "type": "string",
            "title": "Success Url",
            "description": "Success redirect URL"
          },
          "cancel_url": {
            "type": "string",
            "title": "Cancel Url",
            "description": "Cancel redirect URL"
          }
        },
        "type": "object",
        "required": [
          "plan",
          "success_url",
          "cancel_url"
        ],
        "title": "SubscriptionCreateRequest",
        "description": "Request to create subscription"
      },
      "SubscriptionPlan": {
        "type": "string",
        "enum": [
          "free",
          "plus",
          "pro"
        ],
        "title": "SubscriptionPlan",
        "description": "Subscription plan types"
      },
      "SubscriptionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "stripe_customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Customer Id"
          },
          "stripe_subscription_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Subscription Id"
          },
          "plan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "billing_interval": {
            "$ref": "#/components/schemas/BillingInterval"
          },
          "current_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Period Start"
          },
          "current_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Period End"
          },
          "cancel_at_period_end": {
            "type": "boolean",
            "title": "Cancel At Period End"
          },
          "trial_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial End"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "stripe_customer_id",
          "stripe_subscription_id",
          "plan",
          "status",
          "billing_interval",
          "current_period_start",
          "current_period_end",
          "cancel_at_period_end",
          "trial_end",
          "created_at",
          "updated_at"
        ],
        "title": "SubscriptionResponse",
        "description": "Subscription information"
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "active",
          "past_due",
          "canceled",
          "incomplete",
          "trialing"
        ],
        "title": "SubscriptionStatus",
        "description": "Subscription status"
      },
      "SuccessMetrics": {
        "properties": {
          "total_applications": {
            "type": "integer",
            "title": "Total Applications"
          },
          "applications_last_7_days": {
            "type": "integer",
            "title": "Applications Last 7 Days"
          },
          "applications_last_30_days": {
            "type": "integer",
            "title": "Applications Last 30 Days"
          },
          "avg_applications_per_week": {
            "type": "number",
            "title": "Avg Applications Per Week"
          },
          "total_responses": {
            "type": "integer",
            "title": "Total Responses"
          },
          "response_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Response Rate"
          },
          "avg_response_time_days": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Response Time Days"
          },
          "total_interviews": {
            "type": "integer",
            "title": "Total Interviews"
          },
          "interview_conversion_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Interview Conversion Rate"
          },
          "interviews_scheduled": {
            "type": "integer",
            "title": "Interviews Scheduled"
          },
          "interviews_completed": {
            "type": "integer",
            "title": "Interviews Completed"
          },
          "total_offers": {
            "type": "integer",
            "title": "Total Offers"
          },
          "offer_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Offer Rate"
          },
          "pending_offers": {
            "type": "integer",
            "title": "Pending Offers"
          },
          "total_rejections": {
            "type": "integer",
            "title": "Total Rejections"
          },
          "rejection_rate": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Rejection Rate"
          },
          "active_days": {
            "type": "integer",
            "title": "Active Days"
          },
          "avg_daily_applications": {
            "type": "number",
            "title": "Avg Daily Applications"
          },
          "longest_streak_days": {
            "type": "integer",
            "title": "Longest Streak Days"
          }
        },
        "type": "object",
        "required": [
          "total_applications",
          "applications_last_7_days",
          "applications_last_30_days",
          "avg_applications_per_week",
          "total_responses",
          "response_rate",
          "total_interviews",
          "interview_conversion_rate",
          "interviews_scheduled",
          "interviews_completed",
          "total_offers",
          "offer_rate",
          "pending_offers",
          "total_rejections",
          "rejection_rate",
          "active_days",
          "avg_daily_applications",
          "longest_streak_days"
        ],
        "title": "SuccessMetrics",
        "description": "Overall success metrics"
      },
      "TimeRange": {
        "type": "string",
        "enum": [
          "last_7_days",
          "last_30_days",
          "last_90_days",
          "all_time"
        ],
        "title": "TimeRange",
        "description": "Time range for analytics"
      },
      "TimeSeriesChart": {
        "properties": {
          "metric_name": {
            "type": "string",
            "title": "Metric Name"
          },
          "data_points": {
            "items": {
              "$ref": "#/components/schemas/TimeSeriesDataPoint"
            },
            "type": "array",
            "title": "Data Points"
          },
          "trend": {
            "type": "string",
            "pattern": "^(increasing|decreasing|stable)$",
            "title": "Trend"
          },
          "change_percentage": {
            "type": "number",
            "title": "Change Percentage"
          }
        },
        "type": "object",
        "required": [
          "metric_name",
          "data_points",
          "trend",
          "change_percentage"
        ],
        "title": "TimeSeriesChart",
        "description": "Time series chart data"
      },
      "TimeSeriesDataPoint": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "date",
          "value"
        ],
        "title": "TimeSeriesDataPoint",
        "description": "Single data point in time series"
      },
      "UserCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "terms_accepted": {
            "type": "boolean",
            "title": "Terms Accepted"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "terms_accepted"
        ],
        "title": "UserCreate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookEventResponse": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/WebhookSource"
          },
          "event_type": {
            "$ref": "#/components/schemas/WebhookEventType"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "payload": {
            "type": "object",
            "title": "Payload"
          },
          "headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Headers"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "status": {
            "$ref": "#/components/schemas/WebhookEventStatus"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries"
          },
          "application_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "received_at": {
            "type": "string",
            "format": "date-time",
            "title": "Received At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "source",
          "event_type",
          "payload",
          "id",
          "is_verified",
          "status",
          "retry_count",
          "max_retries",
          "received_at",
          "created_at",
          "updated_at"
        ],
        "title": "WebhookEventResponse",
        "description": "Webhook event response schema"
      },
      "WebhookEventStatus": {
        "type": "string",
        "enum": [
          "pending",
          "processing",
          "processed",
          "failed",
          "retry_scheduled"
        ],
        "title": "WebhookEventStatus",
        "description": "Processing status of webhook events"
      },
      "WebhookEventType": {
        "type": "string",
        "enum": [
          "application.submitted",
          "application.viewed",
          "application.rejected",
          "candidate.stage_change",
          "candidate.hired",
          "candidate.archived",
          "interview.scheduled",
          "interview.rescheduled",
          "interview.cancelled",
          "interview.completed",
          "offer.sent",
          "offer.accepted",
          "offer.declined",
          "status.update",
          "unknown"
        ],
        "title": "WebhookEventType",
        "description": "Webhook event types"
      },
      "WebhookSource": {
        "type": "string",
        "enum": [
          "greenhouse",
          "lever",
          "workday",
          "ashby",
          "unknown"
        ],
        "title": "WebhookSource",
        "description": "Supported webhook sources"
      },
      "WebhookStatistics": {
        "properties": {
          "total_events": {
            "type": "integer",
            "title": "Total Events"
          },
          "pending_events": {
            "type": "integer",
            "title": "Pending Events"
          },
          "processing_events": {
            "type": "integer",
            "title": "Processing Events"
          },
          "processed_events": {
            "type": "integer",
            "title": "Processed Events"
          },
          "failed_events": {
            "type": "integer",
            "title": "Failed Events"
          },
          "events_by_source": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Events By Source"
          },
          "events_by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Events By Type"
          },
          "average_processing_time_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Processing Time Seconds"
          },
          "retry_rate_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retry Rate Percentage"
          }
        },
        "type": "object",
        "required": [
          "total_events",
          "pending_events",
          "processing_events",
          "processed_events",
          "failed_events",
          "events_by_source",
          "events_by_type"
        ],
        "title": "WebhookStatistics",
        "description": "Webhook event statistics"
      },
      "WebhookSubscriptionCreate": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/WebhookSource"
          },
          "source_company_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Company Id"
          },
          "webhook_url": {
            "type": "string",
            "maxLength": 500,
            "title": "Webhook Url"
          },
          "event_types": {
            "items": {
              "$ref": "#/components/schemas/WebhookEventType"
            },
            "type": "array",
            "minItems": 1,
            "title": "Event Types"
          },
          "webhook_secret": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 512
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Secret"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "source",
          "webhook_url",
          "event_types"
        ],
        "title": "WebhookSubscriptionCreate",
        "description": "Create webhook subscription schema"
      },
      "WebhookSubscriptionResponse": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/WebhookSource"
          },
          "source_company_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Company Id"
          },
          "webhook_url": {
            "type": "string",
            "maxLength": 500,
            "title": "Webhook Url"
          },
          "event_types": {
            "items": {
              "$ref": "#/components/schemas/WebhookEventType"
            },
            "type": "array",
            "minItems": 1,
            "title": "Event Types"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "webhook_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Secret"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "subscription_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Id"
          },
          "verified": {
            "type": "boolean",
            "title": "Verified"
          },
          "verified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified At"
          },
          "total_events_received": {
            "type": "integer",
            "title": "Total Events Received"
          },
          "last_event_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Event Received At"
          },
          "consecutive_failures": {
            "type": "integer",
            "title": "Consecutive Failures"
          },
          "last_failure_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Failure At"
          },
          "last_failure_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Failure Reason"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "source",
          "webhook_url",
          "event_types",
          "id",
          "is_active",
          "verified",
          "total_events_received",
          "consecutive_failures",
          "created_at",
          "updated_at"
        ],
        "title": "WebhookSubscriptionResponse",
        "description": "Webhook subscription response schema"
      },
      "WorkExperience": {
        "properties": {
          "company": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Company"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "responsibilities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Responsibilities",
            "default": []
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "company",
          "title"
        ],
        "title": "WorkExperience",
        "description": "Work experience entry"
      },
      "WorkPreferencesUpdate": {
        "properties": {
          "remote": {
            "type": "boolean",
            "title": "Remote",
            "description": "Open to remote work",
            "default": false
          },
          "visa_friendly": {
            "type": "boolean",
            "title": "Visa Friendly",
            "description": "Requires visa sponsorship",
            "default": false
          },
          "relocation": {
            "type": "boolean",
            "title": "Relocation",
            "description": "Open to relocation",
            "default": false
          },
          "contract": {
            "type": "boolean",
            "title": "Contract",
            "description": "Open to contract work",
            "default": false
          },
          "part_time": {
            "type": "boolean",
            "title": "Part Time",
            "description": "Open to part-time work",
            "default": false
          }
        },
        "type": "object",
        "title": "WorkPreferencesUpdate",
        "description": "Schema for work preferences (Step 4)"
      },
      "app__schemas__interview__InterviewType": {
        "type": "string",
        "enum": [
          "technical",
          "behavioral",
          "system-design",
          "product",
          "leadership"
        ],
        "title": "InterviewType",
        "description": "Interview types"
      },
      "app__schemas__webhook__InterviewType": {
        "type": "string",
        "enum": [
          "phone_screen",
          "recruiter_screen",
          "technical",
          "coding",
          "system_design",
          "behavioral",
          "cultural_fit",
          "onsite",
          "final",
          "panel",
          "other"
        ],
        "title": "InterviewType",
        "description": "Types of interviews"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check and system status endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication, registration, and OAuth flows"
    },
    {
      "name": "Resumes",
      "description": "Resume creation, management, and versioning"
    },
    {
      "name": "Cover Letters",
      "description": "AI-powered cover letter generation and management"
    },
    {
      "name": "Jobs",
      "description": "Job search, matching, and recommendations"
    },
    {
      "name": "Applications",
      "description": "Job application tracking and management"
    },
    {
      "name": "Auto-Apply",
      "description": "Automated job application submission"
    },
    {
      "name": "Billing",
      "description": "Subscriptions, payments, and credit management"
    },
    {
      "name": "Analytics",
      "description": "User analytics and insights"
    },
    {
      "name": "Interview",
      "description": "Interview preparation and coaching"
    },
    {
      "name": "Notifications",
      "description": "User notifications and alerts"
    }
  ]
}